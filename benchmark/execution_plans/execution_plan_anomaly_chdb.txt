--- Anomaly CHBD Q1 execution tree ---
<bound method PyCapsule.data of "QUERY id: 0"
"  PROJECTION COLUMNS"
"    time_interval DateTime('UTC')"
"    interval_HR Float64"
"    interval_steps Int64"
"    interval_calories Float64"
"    anomaly_flag UInt8"
"  PROJECTION"
"    LIST id: 1, nodes: 5"
"      FUNCTION id: 2, function_name: toStartOfMinute, function_type: ordinary, result_type: DateTime('UTC')"
"        ARGUMENTS"
"          LIST id: 3, nodes: 1"
"            COLUMN id: 4, column_name: ts, result_type: DateTime64(3, 'UTC'), source_id: 5"
"      FUNCTION id: 6, function_name: avg, function_type: aggregate, result_type: Float64"
"        ARGUMENTS"
"          LIST id: 7, nodes: 1"
"            COLUMN id: 8, column_name: HR, result_type: Float64, source_id: 5"
"      FUNCTION id: 9, function_name: minus, function_type: ordinary, result_type: Int64"
"        ARGUMENTS"
"          LIST id: 10, nodes: 2"
"            FUNCTION id: 11, function_name: max, function_type: aggregate, result_type: Int64"
"              ARGUMENTS"
"                LIST id: 12, nodes: 1"
"                  COLUMN id: 13, column_name: steps, result_type: Int64, source_id: 14"
"            FUNCTION id: 15, function_name: min, function_type: aggregate, result_type: Int64"
"              ARGUMENTS"
"                LIST id: 16, nodes: 1"
"                  COLUMN id: 17, column_name: steps, result_type: Int64, source_id: 14"
"      FUNCTION id: 18, function_name: minus, function_type: ordinary, result_type: Float64"
"        ARGUMENTS"
"          LIST id: 19, nodes: 2"
"            FUNCTION id: 20, function_name: max, function_type: aggregate, result_type: Float64"
"              ARGUMENTS"
"                LIST id: 21, nodes: 1"
"                  COLUMN id: 22, column_name: calories, result_type: Float64, source_id: 14"
"            FUNCTION id: 23, function_name: min, function_type: aggregate, result_type: Float64"
"              ARGUMENTS"
"                LIST id: 24, nodes: 1"
"                  COLUMN id: 25, column_name: calories, result_type: Float64, source_id: 14"
"      FUNCTION id: 26, function_name: if, function_type: ordinary, result_type: UInt8"
"        ARGUMENTS"
"          LIST id: 27, nodes: 3"
"            FUNCTION id: 28, function_name: and, function_type: ordinary, result_type: Nullable(UInt8)"
"              ARGUMENTS"
"                LIST id: 29, nodes: 2"
"                  FUNCTION id: 30, function_name: less, function_type: ordinary, result_type: UInt8"
"                    ARGUMENTS"
"                      LIST id: 31, nodes: 2"
"                        FUNCTION id: 32, function_name: minus, function_type: ordinary, result_type: Int64"
"                          ARGUMENTS"
"                            LIST id: 33, nodes: 2"
"                              FUNCTION id: 34, function_name: max, function_type: aggregate, result_type: Int64"
"                                ARGUMENTS"
"                                  LIST id: 35, nodes: 1"
"                                    COLUMN id: 36, column_name: steps, result_type: Int64, source_id: 14"
"                              FUNCTION id: 37, function_name: min, function_type: aggregate, result_type: Int64"
"                                ARGUMENTS"
"                                  LIST id: 38, nodes: 1"
"                                    COLUMN id: 39, column_name: steps, result_type: Int64, source_id: 14"
"                        CONSTANT id: 40, constant_value: UInt64_10, constant_value_type: UInt8"
"                  FUNCTION id: 41, function_name: greater, function_type: ordinary, result_type: Nullable(UInt8)"
"                    ARGUMENTS"
"                      LIST id: 42, nodes: 2"
"                        FUNCTION id: 43, function_name: avg, function_type: aggregate, result_type: Float64"
"                          ARGUMENTS"
"                            LIST id: 44, nodes: 1"
"                              COLUMN id: 45, column_name: HR, result_type: Float64, source_id: 5"
"                        CONSTANT id: 46, constant_value: Float64_91.1025816842978, constant_value_type: Nullable(Float64)"
"                          EXPRESSION"
"                            QUERY id: 47, is_subquery: 1"
"                              PROJECTION COLUMNS"
"                                plus(AVG(HR), stddevSampStable(HR)) Float64"
"                              PROJECTION"
"                                LIST id: 48, nodes: 1"
"                                  FUNCTION id: 49, function_name: plus, function_type: ordinary, result_type: Float64"
"                                    ARGUMENTS"
"                                      LIST id: 50, nodes: 2"
"                                        FUNCTION id: 51, function_name: avg, function_type: aggregate, result_type: Float64"
"                                          ARGUMENTS"
"                                            LIST id: 52, nodes: 1"
"                                              COLUMN id: 53, column_name: HR, result_type: Float64, source_id: 54"
"                                        FUNCTION id: 55, function_name: stddevSampStable, function_type: aggregate, result_type: Float64"
"                                          ARGUMENTS"
"                                            LIST id: 56, nodes: 1"
"                                              COLUMN id: 57, column_name: HR, result_type: Float64, source_id: 54"
"                              JOIN TREE"
"                                TABLE id: 54, table_name: sensor.hrm"
"            CONSTANT id: 58, constant_value: UInt64_1, constant_value_type: UInt8"
"            CONSTANT id: 59, constant_value: UInt64_0, constant_value_type: UInt8"
"  JOIN TREE"
"    JOIN id: 60, strictness: ALL, kind: INNER"
"      LEFT TABLE EXPRESSION"
"        TABLE id: 5, alias: __table1, table_name: sensor.hrm"
"      RIGHT TABLE EXPRESSION"
"        TABLE id: 14, alias: __table2, table_name: sensor.ped"
"      JOIN EXPRESSION"
"        FUNCTION id: 61, function_name: equals, function_type: ordinary, result_type: UInt8"
"          ARGUMENTS"
"            LIST id: 62, nodes: 2"
"              FUNCTION id: 63, function_name: toStartOfMinute, function_type: ordinary, result_type: DateTime('UTC')"
"                ARGUMENTS"
"                  LIST id: 64, nodes: 1"
"                    COLUMN id: 65, column_name: ts, result_type: DateTime64(3, 'UTC'), source_id: 5"
"              FUNCTION id: 66, function_name: toStartOfMinute, function_type: ordinary, result_type: DateTime('UTC')"
"                ARGUMENTS"
"                  LIST id: 67, nodes: 1"
"                    COLUMN id: 68, column_name: ts, result_type: DateTime64(3, 'UTC'), source_id: 14"
"  GROUP BY"
"    LIST id: 69, nodes: 1"
"      FUNCTION id: 70, function_name: toStartOfMinute, function_type: ordinary, result_type: DateTime('UTC')"
"        ARGUMENTS"
"          LIST id: 71, nodes: 1"
"            COLUMN id: 72, column_name: ts, result_type: DateTime64(3, 'UTC'), source_id: 5"
"  ORDER BY"
"    LIST id: 73, nodes: 1"
"      SORT id: 74, sort_direction: ASCENDING, with_fill: 0"
"        EXPRESSION"
"          FUNCTION id: 75, function_name: toStartOfMinute, function_type: ordinary, result_type: DateTime('UTC')"
"            ARGUMENTS"
"              LIST id: 76, nodes: 1"
"                COLUMN id: 77, column_name: ts, result_type: DateTime64(3, 'UTC'), source_id: 5"
>

----------------------------------------

--- Anomaly CHBD Q3 execution tree ---
<bound method PyCapsule.data of "QUERY id: 0"
"  PROJECTION COLUMNS"
"    time_interval DateTime('UTC')"
"    interval_HR Float64"
"    interval_steps Int64"
"    interval_calories Float64"
"    anomaly_flag UInt8"
"  PROJECTION"
"    LIST id: 1, nodes: 5"
"      COLUMN id: 2, column_name: time_interval, result_type: DateTime('UTC'), source_id: 3"
"      COLUMN id: 4, column_name: interval_HR, result_type: Float64, source_id: 3"
"      COLUMN id: 5, column_name: interval_steps, result_type: Int64, source_id: 6"
"      COLUMN id: 7, column_name: interval_calories, result_type: Float64, source_id: 6"
"      FUNCTION id: 8, function_name: if, function_type: ordinary, result_type: UInt8"
"        ARGUMENTS"
"          LIST id: 9, nodes: 3"
"            FUNCTION id: 10, function_name: and, function_type: ordinary, result_type: UInt8"
"              ARGUMENTS"
"                LIST id: 11, nodes: 2"
"                  FUNCTION id: 12, function_name: less, function_type: ordinary, result_type: UInt8"
"                    ARGUMENTS"
"                      LIST id: 13, nodes: 2"
"                        COLUMN id: 14, column_name: interval_steps, result_type: Int64, source_id: 6"
"                        CONSTANT id: 15, constant_value: UInt64_10, constant_value_type: UInt8"
"                  FUNCTION id: 16, function_name: greater, function_type: ordinary, result_type: UInt8"
"                    ARGUMENTS"
"                      LIST id: 17, nodes: 2"
"                        COLUMN id: 18, column_name: interval_HR, result_type: Float64, source_id: 3"
"                        COLUMN id: 19, column_name: threshold, result_type: Float64, source_id: 20"
"            CONSTANT id: 21, constant_value: UInt64_1, constant_value_type: UInt8"
"            CONSTANT id: 22, constant_value: UInt64_0, constant_value_type: UInt8"
"  JOIN TREE"
"    CROSS JOIN id: 23"
"      TABLE EXPRESSION"
"        JOIN id: 24, strictness: ALL, kind: INNER"
"          LEFT TABLE EXPRESSION"
"            QUERY id: 3, alias: __table1, is_subquery: 1, is_cte: 1, cte_name: hr_intervals"
"              PROJECTION COLUMNS"
"                time_interval DateTime('UTC')"
"                interval_HR Float64"
"              PROJECTION"
"                LIST id: 25, nodes: 2"
"                  FUNCTION id: 26, function_name: toStartOfMinute, function_type: ordinary, result_type: DateTime('UTC')"
"                    ARGUMENTS"
"                      LIST id: 27, nodes: 1"
"                        COLUMN id: 28, column_name: ts, result_type: DateTime64(3, 'UTC'), source_id: 29"
"                  FUNCTION id: 30, function_name: avg, function_type: aggregate, result_type: Float64"
"                    ARGUMENTS"
"                      LIST id: 31, nodes: 1"
"                        COLUMN id: 32, column_name: HR, result_type: Float64, source_id: 29"
"              JOIN TREE"
"                TABLE id: 29, alias: __table2, table_name: sensor.hrm"
"              GROUP BY"
"                LIST id: 33, nodes: 1"
"                  FUNCTION id: 34, function_name: toStartOfMinute, function_type: ordinary, result_type: DateTime('UTC')"
"                    ARGUMENTS"
"                      LIST id: 35, nodes: 1"
"                        COLUMN id: 36, column_name: ts, result_type: DateTime64(3, 'UTC'), source_id: 29"
"              ORDER BY"
"                LIST id: 37, nodes: 1"
"                  SORT id: 38, sort_direction: ASCENDING, with_fill: 0"
"                    EXPRESSION"
"                      FUNCTION id: 39, function_name: toStartOfMinute, function_type: ordinary, result_type: DateTime('UTC')"
"                        ARGUMENTS"
"                          LIST id: 40, nodes: 1"
"                            COLUMN id: 41, column_name: ts, result_type: DateTime64(3, 'UTC'), source_id: 29"
"          RIGHT TABLE EXPRESSION"
"            QUERY id: 6, alias: __table3, is_subquery: 1, is_cte: 1, cte_name: ped_intervals"
"              PROJECTION COLUMNS"
"                time_interval DateTime('UTC')"
"                interval_steps Int64"
"                interval_calories Float64"
"              PROJECTION"
"                LIST id: 42, nodes: 3"
"                  FUNCTION id: 43, function_name: toStartOfMinute, function_type: ordinary, result_type: DateTime('UTC')"
"                    ARGUMENTS"
"                      LIST id: 44, nodes: 1"
"                        COLUMN id: 45, column_name: ts, result_type: DateTime64(3, 'UTC'), source_id: 46"
"                  FUNCTION id: 47, function_name: minus, function_type: ordinary, result_type: Int64"
"                    ARGUMENTS"
"                      LIST id: 48, nodes: 2"
"                        FUNCTION id: 49, function_name: max, function_type: aggregate, result_type: Int64"
"                          ARGUMENTS"
"                            LIST id: 50, nodes: 1"
"                              COLUMN id: 51, column_name: steps, result_type: Int64, source_id: 46"
"                        FUNCTION id: 52, function_name: min, function_type: aggregate, result_type: Int64"
"                          ARGUMENTS"
"                            LIST id: 53, nodes: 1"
"                              COLUMN id: 54, column_name: steps, result_type: Int64, source_id: 46"
"                  FUNCTION id: 55, function_name: minus, function_type: ordinary, result_type: Float64"
"                    ARGUMENTS"
"                      LIST id: 56, nodes: 2"
"                        FUNCTION id: 57, function_name: max, function_type: aggregate, result_type: Float64"
"                          ARGUMENTS"
"                            LIST id: 58, nodes: 1"
"                              COLUMN id: 59, column_name: calories, result_type: Float64, source_id: 46"
"                        FUNCTION id: 60, function_name: min, function_type: aggregate, result_type: Float64"
"                          ARGUMENTS"
"                            LIST id: 61, nodes: 1"
"                              COLUMN id: 62, column_name: calories, result_type: Float64, source_id: 46"
"              JOIN TREE"
"                TABLE id: 46, alias: __table4, table_name: sensor.ped"
"              GROUP BY"
"                LIST id: 63, nodes: 1"
"                  FUNCTION id: 64, function_name: toStartOfMinute, function_type: ordinary, result_type: DateTime('UTC')"
"                    ARGUMENTS"
"                      LIST id: 65, nodes: 1"
"                        COLUMN id: 66, column_name: ts, result_type: DateTime64(3, 'UTC'), source_id: 46"
"              ORDER BY"
"                LIST id: 67, nodes: 1"
"                  SORT id: 68, sort_direction: ASCENDING, with_fill: 0"
"                    EXPRESSION"
"                      FUNCTION id: 69, function_name: toStartOfMinute, function_type: ordinary, result_type: DateTime('UTC')"
"                        ARGUMENTS"
"                          LIST id: 70, nodes: 1"
"                            COLUMN id: 71, column_name: ts, result_type: DateTime64(3, 'UTC'), source_id: 46"
"          JOIN EXPRESSION"
"            LIST id: 72, nodes: 1"
"              COLUMN id: 73, column_name: time_interval, result_type: DateTime('UTC'), source_id: 24"
"                EXPRESSION"
"                  LIST id: 74, nodes: 2"
"                    COLUMN id: 75, column_name: time_interval, result_type: DateTime('UTC'), source_id: 3"
"                    COLUMN id: 76, column_name: time_interval, result_type: DateTime('UTC'), source_id: 6"
"      TABLE EXPRESSION"
"        QUERY id: 20, alias: __table5, is_subquery: 1, is_cte: 1, cte_name: HR_threshold"
"          PROJECTION COLUMNS"
"            threshold Float64"
"          PROJECTION"
"            LIST id: 77, nodes: 1"
"              FUNCTION id: 78, function_name: plus, function_type: ordinary, result_type: Float64"
"                ARGUMENTS"
"                  LIST id: 79, nodes: 2"
"                    FUNCTION id: 80, function_name: avg, function_type: aggregate, result_type: Float64"
"                      ARGUMENTS"
"                        LIST id: 81, nodes: 1"
"                          COLUMN id: 82, column_name: HR, result_type: Float64, source_id: 83"
"                    FUNCTION id: 84, function_name: stddevSampStable, function_type: aggregate, result_type: Float64"
"                      ARGUMENTS"
"                        LIST id: 85, nodes: 1"
"                          COLUMN id: 86, column_name: HR, result_type: Float64, source_id: 83"
"          JOIN TREE"
"            TABLE id: 83, alias: __table6, table_name: sensor.hrm"
>

----------------------------------------

--- Anomaly CHBD Q4 execution tree ---
<bound method PyCapsule.data of "QUERY id: 0"
"  PROJECTION COLUMNS"
"    time_interval DateTime('UTC')"
"    interval_HR Float64"
"    interval_steps Int64"
"    interval_calories Float64"
"    anomaly_flag UInt8"
"  PROJECTION"
"    LIST id: 1, nodes: 5"
"      FUNCTION id: 2, function_name: toStartOfMinute, function_type: ordinary, result_type: DateTime('UTC')"
"        ARGUMENTS"
"          LIST id: 3, nodes: 1"
"            COLUMN id: 4, column_name: ts, result_type: DateTime64(3, 'UTC'), source_id: 5"
"      FUNCTION id: 6, function_name: avg, function_type: aggregate, result_type: Float64"
"        ARGUMENTS"
"          LIST id: 7, nodes: 1"
"            COLUMN id: 8, column_name: HR, result_type: Float64, source_id: 5"
"      FUNCTION id: 9, function_name: minus, function_type: ordinary, result_type: Int64"
"        ARGUMENTS"
"          LIST id: 10, nodes: 2"
"            FUNCTION id: 11, function_name: max, function_type: aggregate, result_type: Int64"
"              ARGUMENTS"
"                LIST id: 12, nodes: 1"
"                  COLUMN id: 13, column_name: steps, result_type: Int64, source_id: 14"
"            FUNCTION id: 15, function_name: min, function_type: aggregate, result_type: Int64"
"              ARGUMENTS"
"                LIST id: 16, nodes: 1"
"                  COLUMN id: 17, column_name: steps, result_type: Int64, source_id: 14"
"      FUNCTION id: 18, function_name: minus, function_type: ordinary, result_type: Float64"
"        ARGUMENTS"
"          LIST id: 19, nodes: 2"
"            FUNCTION id: 20, function_name: max, function_type: aggregate, result_type: Float64"
"              ARGUMENTS"
"                LIST id: 21, nodes: 1"
"                  COLUMN id: 22, column_name: calories, result_type: Float64, source_id: 14"
"            FUNCTION id: 23, function_name: min, function_type: aggregate, result_type: Float64"
"              ARGUMENTS"
"                LIST id: 24, nodes: 1"
"                  COLUMN id: 25, column_name: calories, result_type: Float64, source_id: 14"
"      FUNCTION id: 26, function_name: if, function_type: ordinary, result_type: UInt8"
"        ARGUMENTS"
"          LIST id: 27, nodes: 3"
"            FUNCTION id: 28, function_name: and, function_type: ordinary, result_type: Nullable(UInt8)"
"              ARGUMENTS"
"                LIST id: 29, nodes: 2"
"                  FUNCTION id: 30, function_name: less, function_type: ordinary, result_type: UInt8"
"                    ARGUMENTS"
"                      LIST id: 31, nodes: 2"
"                        FUNCTION id: 32, function_name: minus, function_type: ordinary, result_type: Int64"
"                          ARGUMENTS"
"                            LIST id: 33, nodes: 2"
"                              FUNCTION id: 34, function_name: max, function_type: aggregate, result_type: Int64"
"                                ARGUMENTS"
"                                  LIST id: 35, nodes: 1"
"                                    COLUMN id: 36, column_name: steps, result_type: Int64, source_id: 14"
"                              FUNCTION id: 37, function_name: min, function_type: aggregate, result_type: Int64"
"                                ARGUMENTS"
"                                  LIST id: 38, nodes: 1"
"                                    COLUMN id: 39, column_name: steps, result_type: Int64, source_id: 14"
"                        CONSTANT id: 40, constant_value: UInt64_10, constant_value_type: UInt8"
"                  FUNCTION id: 41, function_name: greater, function_type: ordinary, result_type: Nullable(UInt8)"
"                    ARGUMENTS"
"                      LIST id: 42, nodes: 2"
"                        FUNCTION id: 43, function_name: avg, function_type: aggregate, result_type: Float64"
"                          ARGUMENTS"
"                            LIST id: 44, nodes: 1"
"                              COLUMN id: 45, column_name: HR, result_type: Float64, source_id: 5"
"                        CONSTANT id: 46, constant_value: Float64_91.1025816842978, constant_value_type: Nullable(Float64)"
"                          EXPRESSION"
"                            QUERY id: 47, is_subquery: 1"
"                              PROJECTION COLUMNS"
"                                plus(AVG(HR), stddevSampStable(HR)) Float64"
"                              PROJECTION"
"                                LIST id: 48, nodes: 1"
"                                  FUNCTION id: 49, function_name: plus, function_type: ordinary, result_type: Float64"
"                                    ARGUMENTS"
"                                      LIST id: 50, nodes: 2"
"                                        FUNCTION id: 51, function_name: avg, function_type: aggregate, result_type: Float64"
"                                          ARGUMENTS"
"                                            LIST id: 52, nodes: 1"
"                                              COLUMN id: 53, column_name: HR, result_type: Float64, source_id: 54"
"                                        FUNCTION id: 55, function_name: stddevSampStable, function_type: aggregate, result_type: Float64"
"                                          ARGUMENTS"
"                                            LIST id: 56, nodes: 1"
"                                              COLUMN id: 57, column_name: HR, result_type: Float64, source_id: 54"
"                              JOIN TREE"
"                                TABLE id: 54, table_name: sensor.hrm"
"            CONSTANT id: 58, constant_value: UInt64_1, constant_value_type: UInt8"
"            CONSTANT id: 59, constant_value: UInt64_0, constant_value_type: UInt8"
"  JOIN TREE"
"    JOIN id: 60, strictness: ALL, kind: INNER"
"      LEFT TABLE EXPRESSION"
"        TABLE id: 5, alias: __table1, table_name: sensor.hrm"
"      RIGHT TABLE EXPRESSION"
"        TABLE id: 14, alias: __table2, table_name: sensor.ped"
"      JOIN EXPRESSION"
"        FUNCTION id: 61, function_name: equals, function_type: ordinary, result_type: UInt8"
"          ARGUMENTS"
"            LIST id: 62, nodes: 2"
"              FUNCTION id: 63, function_name: formatDateTime, function_type: ordinary, result_type: String"
"                ARGUMENTS"
"                  LIST id: 64, nodes: 2"
"                    FUNCTION id: 65, function_name: toStartOfMinute, function_type: ordinary, result_type: DateTime('UTC')"
"                      ARGUMENTS"
"                        LIST id: 66, nodes: 1"
"                          COLUMN id: 67, column_name: ts, result_type: DateTime64(3, 'UTC'), source_id: 5"
"                    CONSTANT id: 68, constant_value: '%Y-%m-%d %H:%M:%S', constant_value_type: String"
"              FUNCTION id: 69, function_name: formatDateTime, function_type: ordinary, result_type: String"
"                ARGUMENTS"
"                  LIST id: 70, nodes: 2"
"                    FUNCTION id: 71, function_name: toStartOfMinute, function_type: ordinary, result_type: DateTime('UTC')"
"                      ARGUMENTS"
"                        LIST id: 72, nodes: 1"
"                          COLUMN id: 73, column_name: ts, result_type: DateTime64(3, 'UTC'), source_id: 14"
"                    CONSTANT id: 74, constant_value: '%Y-%m-%d %H:%M:%S', constant_value_type: String"
"  GROUP BY"
"    LIST id: 75, nodes: 1"
"      FUNCTION id: 76, function_name: toStartOfMinute, function_type: ordinary, result_type: DateTime('UTC')"
"        ARGUMENTS"
"          LIST id: 77, nodes: 1"
"            COLUMN id: 78, column_name: ts, result_type: DateTime64(3, 'UTC'), source_id: 5"
"  ORDER BY"
"    LIST id: 79, nodes: 1"
"      SORT id: 80, sort_direction: ASCENDING, with_fill: 0"
"        EXPRESSION"
"          FUNCTION id: 81, function_name: toStartOfMinute, function_type: ordinary, result_type: DateTime('UTC')"
"            ARGUMENTS"
"              LIST id: 82, nodes: 1"
"                COLUMN id: 83, column_name: ts, result_type: DateTime64(3, 'UTC'), source_id: 5"
>

----------------------------------------

--- Anomaly CHBD Q1 execution tree ---
<bound method PyCapsule.data of "QUERY id: 0"
"  PROJECTION COLUMNS"
"    time_interval DateTime('UTC')"
"    interval_HR Float64"
"    interval_steps Int64"
"    interval_calories Float64"
"    anomaly_flag UInt8"
"  PROJECTION"
"    LIST id: 1, nodes: 5"
"      FUNCTION id: 2, function_name: toStartOfMinute, function_type: ordinary, result_type: DateTime('UTC')"
"        ARGUMENTS"
"          LIST id: 3, nodes: 1"
"            COLUMN id: 4, column_name: ts, result_type: DateTime64(3, 'UTC'), source_id: 5"
"      FUNCTION id: 6, function_name: avg, function_type: aggregate, result_type: Float64"
"        ARGUMENTS"
"          LIST id: 7, nodes: 1"
"            COLUMN id: 8, column_name: HR, result_type: Float64, source_id: 5"
"      FUNCTION id: 9, function_name: minus, function_type: ordinary, result_type: Int64"
"        ARGUMENTS"
"          LIST id: 10, nodes: 2"
"            FUNCTION id: 11, function_name: max, function_type: aggregate, result_type: Int64"
"              ARGUMENTS"
"                LIST id: 12, nodes: 1"
"                  COLUMN id: 13, column_name: steps, result_type: Int64, source_id: 14"
"            FUNCTION id: 15, function_name: min, function_type: aggregate, result_type: Int64"
"              ARGUMENTS"
"                LIST id: 16, nodes: 1"
"                  COLUMN id: 17, column_name: steps, result_type: Int64, source_id: 14"
"      FUNCTION id: 18, function_name: minus, function_type: ordinary, result_type: Float64"
"        ARGUMENTS"
"          LIST id: 19, nodes: 2"
"            FUNCTION id: 20, function_name: max, function_type: aggregate, result_type: Float64"
"              ARGUMENTS"
"                LIST id: 21, nodes: 1"
"                  COLUMN id: 22, column_name: calories, result_type: Float64, source_id: 14"
"            FUNCTION id: 23, function_name: min, function_type: aggregate, result_type: Float64"
"              ARGUMENTS"
"                LIST id: 24, nodes: 1"
"                  COLUMN id: 25, column_name: calories, result_type: Float64, source_id: 14"
"      FUNCTION id: 26, function_name: if, function_type: ordinary, result_type: UInt8"
"        ARGUMENTS"
"          LIST id: 27, nodes: 3"
"            FUNCTION id: 28, function_name: and, function_type: ordinary, result_type: Nullable(UInt8)"
"              ARGUMENTS"
"                LIST id: 29, nodes: 2"
"                  FUNCTION id: 30, function_name: less, function_type: ordinary, result_type: UInt8"
"                    ARGUMENTS"
"                      LIST id: 31, nodes: 2"
"                        FUNCTION id: 32, function_name: minus, function_type: ordinary, result_type: Int64"
"                          ARGUMENTS"
"                            LIST id: 33, nodes: 2"
"                              FUNCTION id: 34, function_name: max, function_type: aggregate, result_type: Int64"
"                                ARGUMENTS"
"                                  LIST id: 35, nodes: 1"
"                                    COLUMN id: 36, column_name: steps, result_type: Int64, source_id: 14"
"                              FUNCTION id: 37, function_name: min, function_type: aggregate, result_type: Int64"
"                                ARGUMENTS"
"                                  LIST id: 38, nodes: 1"
"                                    COLUMN id: 39, column_name: steps, result_type: Int64, source_id: 14"
"                        CONSTANT id: 40, constant_value: UInt64_10, constant_value_type: UInt8"
"                  FUNCTION id: 41, function_name: greater, function_type: ordinary, result_type: Nullable(UInt8)"
"                    ARGUMENTS"
"                      LIST id: 42, nodes: 2"
"                        FUNCTION id: 43, function_name: avg, function_type: aggregate, result_type: Float64"
"                          ARGUMENTS"
"                            LIST id: 44, nodes: 1"
"                              COLUMN id: 45, column_name: HR, result_type: Float64, source_id: 5"
"                        CONSTANT id: 46, constant_value: Float64_91.1025816842978, constant_value_type: Nullable(Float64)"
"                          EXPRESSION"
"                            QUERY id: 47, is_subquery: 1"
"                              PROJECTION COLUMNS"
"                                plus(AVG(HR), stddevSampStable(HR)) Float64"
"                              PROJECTION"
"                                LIST id: 48, nodes: 1"
"                                  FUNCTION id: 49, function_name: plus, function_type: ordinary, result_type: Float64"
"                                    ARGUMENTS"
"                                      LIST id: 50, nodes: 2"
"                                        FUNCTION id: 51, function_name: avg, function_type: aggregate, result_type: Float64"
"                                          ARGUMENTS"
"                                            LIST id: 52, nodes: 1"
"                                              COLUMN id: 53, column_name: HR, result_type: Float64, source_id: 54"
"                                        FUNCTION id: 55, function_name: stddevSampStable, function_type: aggregate, result_type: Float64"
"                                          ARGUMENTS"
"                                            LIST id: 56, nodes: 1"
"                                              COLUMN id: 57, column_name: HR, result_type: Float64, source_id: 54"
"                              JOIN TREE"
"                                TABLE id: 54, table_name: sensor.hrm"
"            CONSTANT id: 58, constant_value: UInt64_1, constant_value_type: UInt8"
"            CONSTANT id: 59, constant_value: UInt64_0, constant_value_type: UInt8"
"  JOIN TREE"
"    JOIN id: 60, strictness: ALL, kind: INNER"
"      LEFT TABLE EXPRESSION"
"        TABLE id: 5, alias: __table1, table_name: sensor.hrm"
"      RIGHT TABLE EXPRESSION"
"        TABLE id: 14, alias: __table2, table_name: sensor.ped"
"      JOIN EXPRESSION"
"        FUNCTION id: 61, function_name: equals, function_type: ordinary, result_type: UInt8"
"          ARGUMENTS"
"            LIST id: 62, nodes: 2"
"              FUNCTION id: 63, function_name: toStartOfMinute, function_type: ordinary, result_type: DateTime('UTC')"
"                ARGUMENTS"
"                  LIST id: 64, nodes: 1"
"                    COLUMN id: 65, column_name: ts, result_type: DateTime64(3, 'UTC'), source_id: 5"
"              FUNCTION id: 66, function_name: toStartOfMinute, function_type: ordinary, result_type: DateTime('UTC')"
"                ARGUMENTS"
"                  LIST id: 67, nodes: 1"
"                    COLUMN id: 68, column_name: ts, result_type: DateTime64(3, 'UTC'), source_id: 14"
"  GROUP BY"
"    LIST id: 69, nodes: 1"
"      FUNCTION id: 70, function_name: toStartOfMinute, function_type: ordinary, result_type: DateTime('UTC')"
"        ARGUMENTS"
"          LIST id: 71, nodes: 1"
"            COLUMN id: 72, column_name: ts, result_type: DateTime64(3, 'UTC'), source_id: 5"
"  ORDER BY"
"    LIST id: 73, nodes: 1"
"      SORT id: 74, sort_direction: ASCENDING, with_fill: 0"
"        EXPRESSION"
"          FUNCTION id: 75, function_name: toStartOfMinute, function_type: ordinary, result_type: DateTime('UTC')"
"            ARGUMENTS"
"              LIST id: 76, nodes: 1"
"                COLUMN id: 77, column_name: ts, result_type: DateTime64(3, 'UTC'), source_id: 5"
>

----------------------------------------

--- Anomaly CHBD Q3 execution tree ---
<bound method PyCapsule.data of "QUERY id: 0"
"  PROJECTION COLUMNS"
"    time_interval DateTime('UTC')"
"    interval_HR Float64"
"    interval_steps Int64"
"    interval_calories Float64"
"    anomaly_flag UInt8"
"  PROJECTION"
"    LIST id: 1, nodes: 5"
"      COLUMN id: 2, column_name: time_interval, result_type: DateTime('UTC'), source_id: 3"
"      COLUMN id: 4, column_name: interval_HR, result_type: Float64, source_id: 3"
"      COLUMN id: 5, column_name: interval_steps, result_type: Int64, source_id: 6"
"      COLUMN id: 7, column_name: interval_calories, result_type: Float64, source_id: 6"
"      FUNCTION id: 8, function_name: if, function_type: ordinary, result_type: UInt8"
"        ARGUMENTS"
"          LIST id: 9, nodes: 3"
"            FUNCTION id: 10, function_name: and, function_type: ordinary, result_type: UInt8"
"              ARGUMENTS"
"                LIST id: 11, nodes: 2"
"                  FUNCTION id: 12, function_name: less, function_type: ordinary, result_type: UInt8"
"                    ARGUMENTS"
"                      LIST id: 13, nodes: 2"
"                        COLUMN id: 14, column_name: interval_steps, result_type: Int64, source_id: 6"
"                        CONSTANT id: 15, constant_value: UInt64_10, constant_value_type: UInt8"
"                  FUNCTION id: 16, function_name: greater, function_type: ordinary, result_type: UInt8"
"                    ARGUMENTS"
"                      LIST id: 17, nodes: 2"
"                        COLUMN id: 18, column_name: interval_HR, result_type: Float64, source_id: 3"
"                        COLUMN id: 19, column_name: threshold, result_type: Float64, source_id: 20"
"            CONSTANT id: 21, constant_value: UInt64_1, constant_value_type: UInt8"
"            CONSTANT id: 22, constant_value: UInt64_0, constant_value_type: UInt8"
"  JOIN TREE"
"    CROSS JOIN id: 23"
"      TABLE EXPRESSION"
"        JOIN id: 24, strictness: ALL, kind: INNER"
"          LEFT TABLE EXPRESSION"
"            QUERY id: 3, alias: __table1, is_subquery: 1, is_cte: 1, cte_name: hr_intervals"
"              PROJECTION COLUMNS"
"                time_interval DateTime('UTC')"
"                interval_HR Float64"
"              PROJECTION"
"                LIST id: 25, nodes: 2"
"                  FUNCTION id: 26, function_name: toStartOfMinute, function_type: ordinary, result_type: DateTime('UTC')"
"                    ARGUMENTS"
"                      LIST id: 27, nodes: 1"
"                        COLUMN id: 28, column_name: ts, result_type: DateTime64(3, 'UTC'), source_id: 29"
"                  FUNCTION id: 30, function_name: avg, function_type: aggregate, result_type: Float64"
"                    ARGUMENTS"
"                      LIST id: 31, nodes: 1"
"                        COLUMN id: 32, column_name: HR, result_type: Float64, source_id: 29"
"              JOIN TREE"
"                TABLE id: 29, alias: __table2, table_name: sensor.hrm"
"              GROUP BY"
"                LIST id: 33, nodes: 1"
"                  FUNCTION id: 34, function_name: toStartOfMinute, function_type: ordinary, result_type: DateTime('UTC')"
"                    ARGUMENTS"
"                      LIST id: 35, nodes: 1"
"                        COLUMN id: 36, column_name: ts, result_type: DateTime64(3, 'UTC'), source_id: 29"
"              ORDER BY"
"                LIST id: 37, nodes: 1"
"                  SORT id: 38, sort_direction: ASCENDING, with_fill: 0"
"                    EXPRESSION"
"                      FUNCTION id: 39, function_name: toStartOfMinute, function_type: ordinary, result_type: DateTime('UTC')"
"                        ARGUMENTS"
"                          LIST id: 40, nodes: 1"
"                            COLUMN id: 41, column_name: ts, result_type: DateTime64(3, 'UTC'), source_id: 29"
"          RIGHT TABLE EXPRESSION"
"            QUERY id: 6, alias: __table3, is_subquery: 1, is_cte: 1, cte_name: ped_intervals"
"              PROJECTION COLUMNS"
"                time_interval DateTime('UTC')"
"                interval_steps Int64"
"                interval_calories Float64"
"              PROJECTION"
"                LIST id: 42, nodes: 3"
"                  FUNCTION id: 43, function_name: toStartOfMinute, function_type: ordinary, result_type: DateTime('UTC')"
"                    ARGUMENTS"
"                      LIST id: 44, nodes: 1"
"                        COLUMN id: 45, column_name: ts, result_type: DateTime64(3, 'UTC'), source_id: 46"
"                  FUNCTION id: 47, function_name: minus, function_type: ordinary, result_type: Int64"
"                    ARGUMENTS"
"                      LIST id: 48, nodes: 2"
"                        FUNCTION id: 49, function_name: max, function_type: aggregate, result_type: Int64"
"                          ARGUMENTS"
"                            LIST id: 50, nodes: 1"
"                              COLUMN id: 51, column_name: steps, result_type: Int64, source_id: 46"
"                        FUNCTION id: 52, function_name: min, function_type: aggregate, result_type: Int64"
"                          ARGUMENTS"
"                            LIST id: 53, nodes: 1"
"                              COLUMN id: 54, column_name: steps, result_type: Int64, source_id: 46"
"                  FUNCTION id: 55, function_name: minus, function_type: ordinary, result_type: Float64"
"                    ARGUMENTS"
"                      LIST id: 56, nodes: 2"
"                        FUNCTION id: 57, function_name: max, function_type: aggregate, result_type: Float64"
"                          ARGUMENTS"
"                            LIST id: 58, nodes: 1"
"                              COLUMN id: 59, column_name: calories, result_type: Float64, source_id: 46"
"                        FUNCTION id: 60, function_name: min, function_type: aggregate, result_type: Float64"
"                          ARGUMENTS"
"                            LIST id: 61, nodes: 1"
"                              COLUMN id: 62, column_name: calories, result_type: Float64, source_id: 46"
"              JOIN TREE"
"                TABLE id: 46, alias: __table4, table_name: sensor.ped"
"              GROUP BY"
"                LIST id: 63, nodes: 1"
"                  FUNCTION id: 64, function_name: toStartOfMinute, function_type: ordinary, result_type: DateTime('UTC')"
"                    ARGUMENTS"
"                      LIST id: 65, nodes: 1"
"                        COLUMN id: 66, column_name: ts, result_type: DateTime64(3, 'UTC'), source_id: 46"
"              ORDER BY"
"                LIST id: 67, nodes: 1"
"                  SORT id: 68, sort_direction: ASCENDING, with_fill: 0"
"                    EXPRESSION"
"                      FUNCTION id: 69, function_name: toStartOfMinute, function_type: ordinary, result_type: DateTime('UTC')"
"                        ARGUMENTS"
"                          LIST id: 70, nodes: 1"
"                            COLUMN id: 71, column_name: ts, result_type: DateTime64(3, 'UTC'), source_id: 46"
"          JOIN EXPRESSION"
"            LIST id: 72, nodes: 1"
"              COLUMN id: 73, column_name: time_interval, result_type: DateTime('UTC'), source_id: 24"
"                EXPRESSION"
"                  LIST id: 74, nodes: 2"
"                    COLUMN id: 75, column_name: time_interval, result_type: DateTime('UTC'), source_id: 3"
"                    COLUMN id: 76, column_name: time_interval, result_type: DateTime('UTC'), source_id: 6"
"      TABLE EXPRESSION"
"        QUERY id: 20, alias: __table5, is_subquery: 1, is_cte: 1, cte_name: HR_threshold"
"          PROJECTION COLUMNS"
"            threshold Float64"
"          PROJECTION"
"            LIST id: 77, nodes: 1"
"              FUNCTION id: 78, function_name: plus, function_type: ordinary, result_type: Float64"
"                ARGUMENTS"
"                  LIST id: 79, nodes: 2"
"                    FUNCTION id: 80, function_name: avg, function_type: aggregate, result_type: Float64"
"                      ARGUMENTS"
"                        LIST id: 81, nodes: 1"
"                          COLUMN id: 82, column_name: HR, result_type: Float64, source_id: 83"
"                    FUNCTION id: 84, function_name: stddevSampStable, function_type: aggregate, result_type: Float64"
"                      ARGUMENTS"
"                        LIST id: 85, nodes: 1"
"                          COLUMN id: 86, column_name: HR, result_type: Float64, source_id: 83"
"          JOIN TREE"
"            TABLE id: 83, alias: __table6, table_name: sensor.hrm"
>

----------------------------------------

--- Anomaly CHBD Q4 execution tree ---
<bound method PyCapsule.data of "QUERY id: 0"
"  PROJECTION COLUMNS"
"    time_interval DateTime('UTC')"
"    interval_HR Float64"
"    interval_steps Int64"
"    interval_calories Float64"
"    anomaly_flag UInt8"
"  PROJECTION"
"    LIST id: 1, nodes: 5"
"      FUNCTION id: 2, function_name: toStartOfMinute, function_type: ordinary, result_type: DateTime('UTC')"
"        ARGUMENTS"
"          LIST id: 3, nodes: 1"
"            COLUMN id: 4, column_name: ts, result_type: DateTime64(3, 'UTC'), source_id: 5"
"      FUNCTION id: 6, function_name: avg, function_type: aggregate, result_type: Float64"
"        ARGUMENTS"
"          LIST id: 7, nodes: 1"
"            COLUMN id: 8, column_name: HR, result_type: Float64, source_id: 5"
"      FUNCTION id: 9, function_name: minus, function_type: ordinary, result_type: Int64"
"        ARGUMENTS"
"          LIST id: 10, nodes: 2"
"            FUNCTION id: 11, function_name: max, function_type: aggregate, result_type: Int64"
"              ARGUMENTS"
"                LIST id: 12, nodes: 1"
"                  COLUMN id: 13, column_name: steps, result_type: Int64, source_id: 14"
"            FUNCTION id: 15, function_name: min, function_type: aggregate, result_type: Int64"
"              ARGUMENTS"
"                LIST id: 16, nodes: 1"
"                  COLUMN id: 17, column_name: steps, result_type: Int64, source_id: 14"
"      FUNCTION id: 18, function_name: minus, function_type: ordinary, result_type: Float64"
"        ARGUMENTS"
"          LIST id: 19, nodes: 2"
"            FUNCTION id: 20, function_name: max, function_type: aggregate, result_type: Float64"
"              ARGUMENTS"
"                LIST id: 21, nodes: 1"
"                  COLUMN id: 22, column_name: calories, result_type: Float64, source_id: 14"
"            FUNCTION id: 23, function_name: min, function_type: aggregate, result_type: Float64"
"              ARGUMENTS"
"                LIST id: 24, nodes: 1"
"                  COLUMN id: 25, column_name: calories, result_type: Float64, source_id: 14"
"      FUNCTION id: 26, function_name: if, function_type: ordinary, result_type: UInt8"
"        ARGUMENTS"
"          LIST id: 27, nodes: 3"
"            FUNCTION id: 28, function_name: and, function_type: ordinary, result_type: Nullable(UInt8)"
"              ARGUMENTS"
"                LIST id: 29, nodes: 2"
"                  FUNCTION id: 30, function_name: less, function_type: ordinary, result_type: UInt8"
"                    ARGUMENTS"
"                      LIST id: 31, nodes: 2"
"                        FUNCTION id: 32, function_name: minus, function_type: ordinary, result_type: Int64"
"                          ARGUMENTS"
"                            LIST id: 33, nodes: 2"
"                              FUNCTION id: 34, function_name: max, function_type: aggregate, result_type: Int64"
"                                ARGUMENTS"
"                                  LIST id: 35, nodes: 1"
"                                    COLUMN id: 36, column_name: steps, result_type: Int64, source_id: 14"
"                              FUNCTION id: 37, function_name: min, function_type: aggregate, result_type: Int64"
"                                ARGUMENTS"
"                                  LIST id: 38, nodes: 1"
"                                    COLUMN id: 39, column_name: steps, result_type: Int64, source_id: 14"
"                        CONSTANT id: 40, constant_value: UInt64_10, constant_value_type: UInt8"
"                  FUNCTION id: 41, function_name: greater, function_type: ordinary, result_type: Nullable(UInt8)"
"                    ARGUMENTS"
"                      LIST id: 42, nodes: 2"
"                        FUNCTION id: 43, function_name: avg, function_type: aggregate, result_type: Float64"
"                          ARGUMENTS"
"                            LIST id: 44, nodes: 1"
"                              COLUMN id: 45, column_name: HR, result_type: Float64, source_id: 5"
"                        CONSTANT id: 46, constant_value: Float64_91.10258168429765, constant_value_type: Nullable(Float64)"
"                          EXPRESSION"
"                            QUERY id: 47, is_subquery: 1"
"                              PROJECTION COLUMNS"
"                                plus(AVG(HR), stddevSampStable(HR)) Float64"
"                              PROJECTION"
"                                LIST id: 48, nodes: 1"
"                                  FUNCTION id: 49, function_name: plus, function_type: ordinary, result_type: Float64"
"                                    ARGUMENTS"
"                                      LIST id: 50, nodes: 2"
"                                        FUNCTION id: 51, function_name: avg, function_type: aggregate, result_type: Float64"
"                                          ARGUMENTS"
"                                            LIST id: 52, nodes: 1"
"                                              COLUMN id: 53, column_name: HR, result_type: Float64, source_id: 54"
"                                        FUNCTION id: 55, function_name: stddevSampStable, function_type: aggregate, result_type: Float64"
"                                          ARGUMENTS"
"                                            LIST id: 56, nodes: 1"
"                                              COLUMN id: 57, column_name: HR, result_type: Float64, source_id: 54"
"                              JOIN TREE"
"                                TABLE id: 54, table_name: sensor.hrm"
"            CONSTANT id: 58, constant_value: UInt64_1, constant_value_type: UInt8"
"            CONSTANT id: 59, constant_value: UInt64_0, constant_value_type: UInt8"
"  JOIN TREE"
"    JOIN id: 60, strictness: ALL, kind: INNER"
"      LEFT TABLE EXPRESSION"
"        TABLE id: 5, alias: __table1, table_name: sensor.hrm"
"      RIGHT TABLE EXPRESSION"
"        TABLE id: 14, alias: __table2, table_name: sensor.ped"
"      JOIN EXPRESSION"
"        FUNCTION id: 61, function_name: equals, function_type: ordinary, result_type: UInt8"
"          ARGUMENTS"
"            LIST id: 62, nodes: 2"
"              FUNCTION id: 63, function_name: formatDateTime, function_type: ordinary, result_type: String"
"                ARGUMENTS"
"                  LIST id: 64, nodes: 2"
"                    FUNCTION id: 65, function_name: toStartOfMinute, function_type: ordinary, result_type: DateTime('UTC')"
"                      ARGUMENTS"
"                        LIST id: 66, nodes: 1"
"                          COLUMN id: 67, column_name: ts, result_type: DateTime64(3, 'UTC'), source_id: 5"
"                    CONSTANT id: 68, constant_value: '%Y-%m-%d %H:%M:%S', constant_value_type: String"
"              FUNCTION id: 69, function_name: formatDateTime, function_type: ordinary, result_type: String"
"                ARGUMENTS"
"                  LIST id: 70, nodes: 2"
"                    FUNCTION id: 71, function_name: toStartOfMinute, function_type: ordinary, result_type: DateTime('UTC')"
"                      ARGUMENTS"
"                        LIST id: 72, nodes: 1"
"                          COLUMN id: 73, column_name: ts, result_type: DateTime64(3, 'UTC'), source_id: 14"
"                    CONSTANT id: 74, constant_value: '%Y-%m-%d %H:%M:%S', constant_value_type: String"
"  GROUP BY"
"    LIST id: 75, nodes: 1"
"      FUNCTION id: 76, function_name: toStartOfMinute, function_type: ordinary, result_type: DateTime('UTC')"
"        ARGUMENTS"
"          LIST id: 77, nodes: 1"
"            COLUMN id: 78, column_name: ts, result_type: DateTime64(3, 'UTC'), source_id: 5"
"  ORDER BY"
"    LIST id: 79, nodes: 1"
"      SORT id: 80, sort_direction: ASCENDING, with_fill: 0"
"        EXPRESSION"
"          FUNCTION id: 81, function_name: toStartOfMinute, function_type: ordinary, result_type: DateTime('UTC')"
"            ARGUMENTS"
"              LIST id: 82, nodes: 1"
"                COLUMN id: 83, column_name: ts, result_type: DateTime64(3, 'UTC'), source_id: 5"
>

----------------------------------------

--- Anomaly CHBD Q1 execution tree ---
<bound method PyCapsule.data of "QUERY id: 0"
"  PROJECTION COLUMNS"
"    time_interval DateTime('UTC')"
"    interval_HR Float64"
"    interval_steps Int64"
"    interval_calories Float64"
"    anomaly_flag UInt8"
"  PROJECTION"
"    LIST id: 1, nodes: 5"
"      FUNCTION id: 2, function_name: toStartOfMinute, function_type: ordinary, result_type: DateTime('UTC')"
"        ARGUMENTS"
"          LIST id: 3, nodes: 1"
"            COLUMN id: 4, column_name: ts, result_type: DateTime64(3, 'UTC'), source_id: 5"
"      FUNCTION id: 6, function_name: avg, function_type: aggregate, result_type: Float64"
"        ARGUMENTS"
"          LIST id: 7, nodes: 1"
"            COLUMN id: 8, column_name: HR, result_type: Float64, source_id: 5"
"      FUNCTION id: 9, function_name: minus, function_type: ordinary, result_type: Int64"
"        ARGUMENTS"
"          LIST id: 10, nodes: 2"
"            FUNCTION id: 11, function_name: max, function_type: aggregate, result_type: Int64"
"              ARGUMENTS"
"                LIST id: 12, nodes: 1"
"                  COLUMN id: 13, column_name: steps, result_type: Int64, source_id: 14"
"            FUNCTION id: 15, function_name: min, function_type: aggregate, result_type: Int64"
"              ARGUMENTS"
"                LIST id: 16, nodes: 1"
"                  COLUMN id: 17, column_name: steps, result_type: Int64, source_id: 14"
"      FUNCTION id: 18, function_name: minus, function_type: ordinary, result_type: Float64"
"        ARGUMENTS"
"          LIST id: 19, nodes: 2"
"            FUNCTION id: 20, function_name: max, function_type: aggregate, result_type: Float64"
"              ARGUMENTS"
"                LIST id: 21, nodes: 1"
"                  COLUMN id: 22, column_name: calories, result_type: Float64, source_id: 14"
"            FUNCTION id: 23, function_name: min, function_type: aggregate, result_type: Float64"
"              ARGUMENTS"
"                LIST id: 24, nodes: 1"
"                  COLUMN id: 25, column_name: calories, result_type: Float64, source_id: 14"
"      FUNCTION id: 26, function_name: if, function_type: ordinary, result_type: UInt8"
"        ARGUMENTS"
"          LIST id: 27, nodes: 3"
"            FUNCTION id: 28, function_name: and, function_type: ordinary, result_type: Nullable(UInt8)"
"              ARGUMENTS"
"                LIST id: 29, nodes: 2"
"                  FUNCTION id: 30, function_name: less, function_type: ordinary, result_type: UInt8"
"                    ARGUMENTS"
"                      LIST id: 31, nodes: 2"
"                        FUNCTION id: 32, function_name: minus, function_type: ordinary, result_type: Int64"
"                          ARGUMENTS"
"                            LIST id: 33, nodes: 2"
"                              FUNCTION id: 34, function_name: max, function_type: aggregate, result_type: Int64"
"                                ARGUMENTS"
"                                  LIST id: 35, nodes: 1"
"                                    COLUMN id: 36, column_name: steps, result_type: Int64, source_id: 14"
"                              FUNCTION id: 37, function_name: min, function_type: aggregate, result_type: Int64"
"                                ARGUMENTS"
"                                  LIST id: 38, nodes: 1"
"                                    COLUMN id: 39, column_name: steps, result_type: Int64, source_id: 14"
"                        CONSTANT id: 40, constant_value: UInt64_10, constant_value_type: UInt8"
"                  FUNCTION id: 41, function_name: greater, function_type: ordinary, result_type: Nullable(UInt8)"
"                    ARGUMENTS"
"                      LIST id: 42, nodes: 2"
"                        FUNCTION id: 43, function_name: avg, function_type: aggregate, result_type: Float64"
"                          ARGUMENTS"
"                            LIST id: 44, nodes: 1"
"                              COLUMN id: 45, column_name: HR, result_type: Float64, source_id: 5"
"                        CONSTANT id: 46, constant_value: Float64_91.1025816842978, constant_value_type: Nullable(Float64)"
"                          EXPRESSION"
"                            QUERY id: 47, is_subquery: 1"
"                              PROJECTION COLUMNS"
"                                plus(AVG(HR), stddevSampStable(HR)) Float64"
"                              PROJECTION"
"                                LIST id: 48, nodes: 1"
"                                  FUNCTION id: 49, function_name: plus, function_type: ordinary, result_type: Float64"
"                                    ARGUMENTS"
"                                      LIST id: 50, nodes: 2"
"                                        FUNCTION id: 51, function_name: avg, function_type: aggregate, result_type: Float64"
"                                          ARGUMENTS"
"                                            LIST id: 52, nodes: 1"
"                                              COLUMN id: 53, column_name: HR, result_type: Float64, source_id: 54"
"                                        FUNCTION id: 55, function_name: stddevSampStable, function_type: aggregate, result_type: Float64"
"                                          ARGUMENTS"
"                                            LIST id: 56, nodes: 1"
"                                              COLUMN id: 57, column_name: HR, result_type: Float64, source_id: 54"
"                              JOIN TREE"
"                                TABLE id: 54, table_name: sensor.hrm"
"            CONSTANT id: 58, constant_value: UInt64_1, constant_value_type: UInt8"
"            CONSTANT id: 59, constant_value: UInt64_0, constant_value_type: UInt8"
"  JOIN TREE"
"    JOIN id: 60, strictness: ALL, kind: INNER"
"      LEFT TABLE EXPRESSION"
"        TABLE id: 5, alias: __table1, table_name: sensor.hrm"
"      RIGHT TABLE EXPRESSION"
"        TABLE id: 14, alias: __table2, table_name: sensor.ped"
"      JOIN EXPRESSION"
"        FUNCTION id: 61, function_name: equals, function_type: ordinary, result_type: UInt8"
"          ARGUMENTS"
"            LIST id: 62, nodes: 2"
"              FUNCTION id: 63, function_name: toStartOfMinute, function_type: ordinary, result_type: DateTime('UTC')"
"                ARGUMENTS"
"                  LIST id: 64, nodes: 1"
"                    COLUMN id: 65, column_name: ts, result_type: DateTime64(3, 'UTC'), source_id: 5"
"              FUNCTION id: 66, function_name: toStartOfMinute, function_type: ordinary, result_type: DateTime('UTC')"
"                ARGUMENTS"
"                  LIST id: 67, nodes: 1"
"                    COLUMN id: 68, column_name: ts, result_type: DateTime64(3, 'UTC'), source_id: 14"
"  GROUP BY"
"    LIST id: 69, nodes: 1"
"      FUNCTION id: 70, function_name: toStartOfMinute, function_type: ordinary, result_type: DateTime('UTC')"
"        ARGUMENTS"
"          LIST id: 71, nodes: 1"
"            COLUMN id: 72, column_name: ts, result_type: DateTime64(3, 'UTC'), source_id: 5"
"  ORDER BY"
"    LIST id: 73, nodes: 1"
"      SORT id: 74, sort_direction: ASCENDING, with_fill: 0"
"        EXPRESSION"
"          FUNCTION id: 75, function_name: toStartOfMinute, function_type: ordinary, result_type: DateTime('UTC')"
"            ARGUMENTS"
"              LIST id: 76, nodes: 1"
"                COLUMN id: 77, column_name: ts, result_type: DateTime64(3, 'UTC'), source_id: 5"
>

----------------------------------------

--- Anomaly CHBD Q3 execution tree ---
<bound method PyCapsule.data of "QUERY id: 0"
"  PROJECTION COLUMNS"
"    time_interval DateTime('UTC')"
"    interval_HR Float64"
"    interval_steps Int64"
"    interval_calories Float64"
"    anomaly_flag UInt8"
"  PROJECTION"
"    LIST id: 1, nodes: 5"
"      COLUMN id: 2, column_name: time_interval, result_type: DateTime('UTC'), source_id: 3"
"      COLUMN id: 4, column_name: interval_HR, result_type: Float64, source_id: 3"
"      COLUMN id: 5, column_name: interval_steps, result_type: Int64, source_id: 6"
"      COLUMN id: 7, column_name: interval_calories, result_type: Float64, source_id: 6"
"      FUNCTION id: 8, function_name: if, function_type: ordinary, result_type: UInt8"
"        ARGUMENTS"
"          LIST id: 9, nodes: 3"
"            FUNCTION id: 10, function_name: and, function_type: ordinary, result_type: UInt8"
"              ARGUMENTS"
"                LIST id: 11, nodes: 2"
"                  FUNCTION id: 12, function_name: less, function_type: ordinary, result_type: UInt8"
"                    ARGUMENTS"
"                      LIST id: 13, nodes: 2"
"                        COLUMN id: 14, column_name: interval_steps, result_type: Int64, source_id: 6"
"                        CONSTANT id: 15, constant_value: UInt64_10, constant_value_type: UInt8"
"                  FUNCTION id: 16, function_name: greater, function_type: ordinary, result_type: UInt8"
"                    ARGUMENTS"
"                      LIST id: 17, nodes: 2"
"                        COLUMN id: 18, column_name: interval_HR, result_type: Float64, source_id: 3"
"                        COLUMN id: 19, column_name: threshold, result_type: Float64, source_id: 20"
"            CONSTANT id: 21, constant_value: UInt64_1, constant_value_type: UInt8"
"            CONSTANT id: 22, constant_value: UInt64_0, constant_value_type: UInt8"
"  JOIN TREE"
"    CROSS JOIN id: 23"
"      TABLE EXPRESSION"
"        JOIN id: 24, strictness: ALL, kind: INNER"
"          LEFT TABLE EXPRESSION"
"            QUERY id: 3, alias: __table1, is_subquery: 1, is_cte: 1, cte_name: hr_intervals"
"              PROJECTION COLUMNS"
"                time_interval DateTime('UTC')"
"                interval_HR Float64"
"              PROJECTION"
"                LIST id: 25, nodes: 2"
"                  FUNCTION id: 26, function_name: toStartOfMinute, function_type: ordinary, result_type: DateTime('UTC')"
"                    ARGUMENTS"
"                      LIST id: 27, nodes: 1"
"                        COLUMN id: 28, column_name: ts, result_type: DateTime64(3, 'UTC'), source_id: 29"
"                  FUNCTION id: 30, function_name: avg, function_type: aggregate, result_type: Float64"
"                    ARGUMENTS"
"                      LIST id: 31, nodes: 1"
"                        COLUMN id: 32, column_name: HR, result_type: Float64, source_id: 29"
"              JOIN TREE"
"                TABLE id: 29, alias: __table2, table_name: sensor.hrm"
"              GROUP BY"
"                LIST id: 33, nodes: 1"
"                  FUNCTION id: 34, function_name: toStartOfMinute, function_type: ordinary, result_type: DateTime('UTC')"
"                    ARGUMENTS"
"                      LIST id: 35, nodes: 1"
"                        COLUMN id: 36, column_name: ts, result_type: DateTime64(3, 'UTC'), source_id: 29"
"              ORDER BY"
"                LIST id: 37, nodes: 1"
"                  SORT id: 38, sort_direction: ASCENDING, with_fill: 0"
"                    EXPRESSION"
"                      FUNCTION id: 39, function_name: toStartOfMinute, function_type: ordinary, result_type: DateTime('UTC')"
"                        ARGUMENTS"
"                          LIST id: 40, nodes: 1"
"                            COLUMN id: 41, column_name: ts, result_type: DateTime64(3, 'UTC'), source_id: 29"
"          RIGHT TABLE EXPRESSION"
"            QUERY id: 6, alias: __table3, is_subquery: 1, is_cte: 1, cte_name: ped_intervals"
"              PROJECTION COLUMNS"
"                time_interval DateTime('UTC')"
"                interval_steps Int64"
"                interval_calories Float64"
"              PROJECTION"
"                LIST id: 42, nodes: 3"
"                  FUNCTION id: 43, function_name: toStartOfMinute, function_type: ordinary, result_type: DateTime('UTC')"
"                    ARGUMENTS"
"                      LIST id: 44, nodes: 1"
"                        COLUMN id: 45, column_name: ts, result_type: DateTime64(3, 'UTC'), source_id: 46"
"                  FUNCTION id: 47, function_name: minus, function_type: ordinary, result_type: Int64"
"                    ARGUMENTS"
"                      LIST id: 48, nodes: 2"
"                        FUNCTION id: 49, function_name: max, function_type: aggregate, result_type: Int64"
"                          ARGUMENTS"
"                            LIST id: 50, nodes: 1"
"                              COLUMN id: 51, column_name: steps, result_type: Int64, source_id: 46"
"                        FUNCTION id: 52, function_name: min, function_type: aggregate, result_type: Int64"
"                          ARGUMENTS"
"                            LIST id: 53, nodes: 1"
"                              COLUMN id: 54, column_name: steps, result_type: Int64, source_id: 46"
"                  FUNCTION id: 55, function_name: minus, function_type: ordinary, result_type: Float64"
"                    ARGUMENTS"
"                      LIST id: 56, nodes: 2"
"                        FUNCTION id: 57, function_name: max, function_type: aggregate, result_type: Float64"
"                          ARGUMENTS"
"                            LIST id: 58, nodes: 1"
"                              COLUMN id: 59, column_name: calories, result_type: Float64, source_id: 46"
"                        FUNCTION id: 60, function_name: min, function_type: aggregate, result_type: Float64"
"                          ARGUMENTS"
"                            LIST id: 61, nodes: 1"
"                              COLUMN id: 62, column_name: calories, result_type: Float64, source_id: 46"
"              JOIN TREE"
"                TABLE id: 46, alias: __table4, table_name: sensor.ped"
"              GROUP BY"
"                LIST id: 63, nodes: 1"
"                  FUNCTION id: 64, function_name: toStartOfMinute, function_type: ordinary, result_type: DateTime('UTC')"
"                    ARGUMENTS"
"                      LIST id: 65, nodes: 1"
"                        COLUMN id: 66, column_name: ts, result_type: DateTime64(3, 'UTC'), source_id: 46"
"              ORDER BY"
"                LIST id: 67, nodes: 1"
"                  SORT id: 68, sort_direction: ASCENDING, with_fill: 0"
"                    EXPRESSION"
"                      FUNCTION id: 69, function_name: toStartOfMinute, function_type: ordinary, result_type: DateTime('UTC')"
"                        ARGUMENTS"
"                          LIST id: 70, nodes: 1"
"                            COLUMN id: 71, column_name: ts, result_type: DateTime64(3, 'UTC'), source_id: 46"
"          JOIN EXPRESSION"
"            LIST id: 72, nodes: 1"
"              COLUMN id: 73, column_name: time_interval, result_type: DateTime('UTC'), source_id: 24"
"                EXPRESSION"
"                  LIST id: 74, nodes: 2"
"                    COLUMN id: 75, column_name: time_interval, result_type: DateTime('UTC'), source_id: 3"
"                    COLUMN id: 76, column_name: time_interval, result_type: DateTime('UTC'), source_id: 6"
"      TABLE EXPRESSION"
"        QUERY id: 20, alias: __table5, is_subquery: 1, is_cte: 1, cte_name: HR_threshold"
"          PROJECTION COLUMNS"
"            threshold Float64"
"          PROJECTION"
"            LIST id: 77, nodes: 1"
"              FUNCTION id: 78, function_name: plus, function_type: ordinary, result_type: Float64"
"                ARGUMENTS"
"                  LIST id: 79, nodes: 2"
"                    FUNCTION id: 80, function_name: avg, function_type: aggregate, result_type: Float64"
"                      ARGUMENTS"
"                        LIST id: 81, nodes: 1"
"                          COLUMN id: 82, column_name: HR, result_type: Float64, source_id: 83"
"                    FUNCTION id: 84, function_name: stddevSampStable, function_type: aggregate, result_type: Float64"
"                      ARGUMENTS"
"                        LIST id: 85, nodes: 1"
"                          COLUMN id: 86, column_name: HR, result_type: Float64, source_id: 83"
"          JOIN TREE"
"            TABLE id: 83, alias: __table6, table_name: sensor.hrm"
>

----------------------------------------

--- Anomaly CHBD Q4 execution tree ---
<bound method PyCapsule.data of "QUERY id: 0"
"  PROJECTION COLUMNS"
"    time_interval DateTime('UTC')"
"    interval_HR Float64"
"    interval_steps Int64"
"    interval_calories Float64"
"    anomaly_flag UInt8"
"  PROJECTION"
"    LIST id: 1, nodes: 5"
"      FUNCTION id: 2, function_name: toStartOfMinute, function_type: ordinary, result_type: DateTime('UTC')"
"        ARGUMENTS"
"          LIST id: 3, nodes: 1"
"            COLUMN id: 4, column_name: ts, result_type: DateTime64(3, 'UTC'), source_id: 5"
"      FUNCTION id: 6, function_name: avg, function_type: aggregate, result_type: Float64"
"        ARGUMENTS"
"          LIST id: 7, nodes: 1"
"            COLUMN id: 8, column_name: HR, result_type: Float64, source_id: 5"
"      FUNCTION id: 9, function_name: minus, function_type: ordinary, result_type: Int64"
"        ARGUMENTS"
"          LIST id: 10, nodes: 2"
"            FUNCTION id: 11, function_name: max, function_type: aggregate, result_type: Int64"
"              ARGUMENTS"
"                LIST id: 12, nodes: 1"
"                  COLUMN id: 13, column_name: steps, result_type: Int64, source_id: 14"
"            FUNCTION id: 15, function_name: min, function_type: aggregate, result_type: Int64"
"              ARGUMENTS"
"                LIST id: 16, nodes: 1"
"                  COLUMN id: 17, column_name: steps, result_type: Int64, source_id: 14"
"      FUNCTION id: 18, function_name: minus, function_type: ordinary, result_type: Float64"
"        ARGUMENTS"
"          LIST id: 19, nodes: 2"
"            FUNCTION id: 20, function_name: max, function_type: aggregate, result_type: Float64"
"              ARGUMENTS"
"                LIST id: 21, nodes: 1"
"                  COLUMN id: 22, column_name: calories, result_type: Float64, source_id: 14"
"            FUNCTION id: 23, function_name: min, function_type: aggregate, result_type: Float64"
"              ARGUMENTS"
"                LIST id: 24, nodes: 1"
"                  COLUMN id: 25, column_name: calories, result_type: Float64, source_id: 14"
"      FUNCTION id: 26, function_name: if, function_type: ordinary, result_type: UInt8"
"        ARGUMENTS"
"          LIST id: 27, nodes: 3"
"            FUNCTION id: 28, function_name: and, function_type: ordinary, result_type: Nullable(UInt8)"
"              ARGUMENTS"
"                LIST id: 29, nodes: 2"
"                  FUNCTION id: 30, function_name: less, function_type: ordinary, result_type: UInt8"
"                    ARGUMENTS"
"                      LIST id: 31, nodes: 2"
"                        FUNCTION id: 32, function_name: minus, function_type: ordinary, result_type: Int64"
"                          ARGUMENTS"
"                            LIST id: 33, nodes: 2"
"                              FUNCTION id: 34, function_name: max, function_type: aggregate, result_type: Int64"
"                                ARGUMENTS"
"                                  LIST id: 35, nodes: 1"
"                                    COLUMN id: 36, column_name: steps, result_type: Int64, source_id: 14"
"                              FUNCTION id: 37, function_name: min, function_type: aggregate, result_type: Int64"
"                                ARGUMENTS"
"                                  LIST id: 38, nodes: 1"
"                                    COLUMN id: 39, column_name: steps, result_type: Int64, source_id: 14"
"                        CONSTANT id: 40, constant_value: UInt64_10, constant_value_type: UInt8"
"                  FUNCTION id: 41, function_name: greater, function_type: ordinary, result_type: Nullable(UInt8)"
"                    ARGUMENTS"
"                      LIST id: 42, nodes: 2"
"                        FUNCTION id: 43, function_name: avg, function_type: aggregate, result_type: Float64"
"                          ARGUMENTS"
"                            LIST id: 44, nodes: 1"
"                              COLUMN id: 45, column_name: HR, result_type: Float64, source_id: 5"
"                        CONSTANT id: 46, constant_value: Float64_91.10258168429766, constant_value_type: Nullable(Float64)"
"                          EXPRESSION"
"                            QUERY id: 47, is_subquery: 1"
"                              PROJECTION COLUMNS"
"                                plus(AVG(HR), stddevSampStable(HR)) Float64"
"                              PROJECTION"
"                                LIST id: 48, nodes: 1"
"                                  FUNCTION id: 49, function_name: plus, function_type: ordinary, result_type: Float64"
"                                    ARGUMENTS"
"                                      LIST id: 50, nodes: 2"
"                                        FUNCTION id: 51, function_name: avg, function_type: aggregate, result_type: Float64"
"                                          ARGUMENTS"
"                                            LIST id: 52, nodes: 1"
"                                              COLUMN id: 53, column_name: HR, result_type: Float64, source_id: 54"
"                                        FUNCTION id: 55, function_name: stddevSampStable, function_type: aggregate, result_type: Float64"
"                                          ARGUMENTS"
"                                            LIST id: 56, nodes: 1"
"                                              COLUMN id: 57, column_name: HR, result_type: Float64, source_id: 54"
"                              JOIN TREE"
"                                TABLE id: 54, table_name: sensor.hrm"
"            CONSTANT id: 58, constant_value: UInt64_1, constant_value_type: UInt8"
"            CONSTANT id: 59, constant_value: UInt64_0, constant_value_type: UInt8"
"  JOIN TREE"
"    JOIN id: 60, strictness: ALL, kind: INNER"
"      LEFT TABLE EXPRESSION"
"        TABLE id: 5, alias: __table1, table_name: sensor.hrm"
"      RIGHT TABLE EXPRESSION"
"        TABLE id: 14, alias: __table2, table_name: sensor.ped"
"      JOIN EXPRESSION"
"        FUNCTION id: 61, function_name: equals, function_type: ordinary, result_type: UInt8"
"          ARGUMENTS"
"            LIST id: 62, nodes: 2"
"              FUNCTION id: 63, function_name: formatDateTime, function_type: ordinary, result_type: String"
"                ARGUMENTS"
"                  LIST id: 64, nodes: 2"
"                    FUNCTION id: 65, function_name: toStartOfMinute, function_type: ordinary, result_type: DateTime('UTC')"
"                      ARGUMENTS"
"                        LIST id: 66, nodes: 1"
"                          COLUMN id: 67, column_name: ts, result_type: DateTime64(3, 'UTC'), source_id: 5"
"                    CONSTANT id: 68, constant_value: '%Y-%m-%d %H:%M:%S', constant_value_type: String"
"              FUNCTION id: 69, function_name: formatDateTime, function_type: ordinary, result_type: String"
"                ARGUMENTS"
"                  LIST id: 70, nodes: 2"
"                    FUNCTION id: 71, function_name: toStartOfMinute, function_type: ordinary, result_type: DateTime('UTC')"
"                      ARGUMENTS"
"                        LIST id: 72, nodes: 1"
"                          COLUMN id: 73, column_name: ts, result_type: DateTime64(3, 'UTC'), source_id: 14"
"                    CONSTANT id: 74, constant_value: '%Y-%m-%d %H:%M:%S', constant_value_type: String"
"  GROUP BY"
"    LIST id: 75, nodes: 1"
"      FUNCTION id: 76, function_name: toStartOfMinute, function_type: ordinary, result_type: DateTime('UTC')"
"        ARGUMENTS"
"          LIST id: 77, nodes: 1"
"            COLUMN id: 78, column_name: ts, result_type: DateTime64(3, 'UTC'), source_id: 5"
"  ORDER BY"
"    LIST id: 79, nodes: 1"
"      SORT id: 80, sort_direction: ASCENDING, with_fill: 0"
"        EXPRESSION"
"          FUNCTION id: 81, function_name: toStartOfMinute, function_type: ordinary, result_type: DateTime('UTC')"
"            ARGUMENTS"
"              LIST id: 82, nodes: 1"
"                COLUMN id: 83, column_name: ts, result_type: DateTime64(3, 'UTC'), source_id: 5"
>

----------------------------------------

