--- Category CHBD Q1 execution tree ---

<bound method PyCapsule.data of "QUERY id: 0"
"  PROJECTION COLUMNS"
"    h.time_interval DateTime('UTC')"
"    interval_HR Float64"
"    acc_magnitude Float64"
"    gyr_magnitude Float64"
"    type_of_activity String"
"  PROJECTION"
"    LIST id: 1, nodes: 5"
"      COLUMN id: 2, column_name: time_interval, result_type: DateTime('UTC'), source_id: 3"
"      COLUMN id: 4, column_name: interval_HR, result_type: Float64, source_id: 3"
"      COLUMN id: 5, column_name: acc_magnitude, result_type: Float64, source_id: 6"
"      COLUMN id: 7, column_name: gyr_magnitude, result_type: Float64, source_id: 8"
"      FUNCTION id: 9, function_name: multiIf, function_type: ordinary, result_type: String"
"        ARGUMENTS"
"          LIST id: 10, nodes: 7"
"            FUNCTION id: 11, function_name: or, function_type: ordinary, result_type: UInt8"
"              ARGUMENTS"
"                LIST id: 12, nodes: 2"
"                  FUNCTION id: 13, function_name: less, function_type: ordinary, result_type: UInt8"
"                    ARGUMENTS"
"                      LIST id: 14, nodes: 2"
"                        COLUMN id: 15, column_name: interval_HR, result_type: Float64, source_id: 3"
"                        CONSTANT id: 16, constant_value: UInt64_80, constant_value_type: UInt8"
"                  FUNCTION id: 17, function_name: and, function_type: ordinary, result_type: UInt8"
"                    ARGUMENTS"
"                      LIST id: 18, nodes: 2"
"                        FUNCTION id: 19, function_name: less, function_type: ordinary, result_type: UInt8"
"                          ARGUMENTS"
"                            LIST id: 20, nodes: 2"
"                              COLUMN id: 21, column_name: acc_magnitude, result_type: Float64, source_id: 6"
"                              CONSTANT id: 22, constant_value: UInt64_2, constant_value_type: UInt8"
"                        FUNCTION id: 23, function_name: less, function_type: ordinary, result_type: UInt8"
"                          ARGUMENTS"
"                            LIST id: 24, nodes: 2"
"                              COLUMN id: 25, column_name: gyr_magnitude, result_type: Float64, source_id: 8"
"                              CONSTANT id: 26, constant_value: UInt64_2, constant_value_type: UInt8"
"            CONSTANT id: 27, constant_value: 'sitting', constant_value_type: String"
"            FUNCTION id: 28, function_name: or, function_type: ordinary, result_type: UInt8"
"              ARGUMENTS"
"                LIST id: 29, nodes: 2"
"                  FUNCTION id: 30, function_name: less, function_type: ordinary, result_type: UInt8"
"                    ARGUMENTS"
"                      LIST id: 31, nodes: 2"
"                        COLUMN id: 32, column_name: interval_HR, result_type: Float64, source_id: 3"
"                        CONSTANT id: 33, constant_value: UInt64_110, constant_value_type: UInt8"
"                  FUNCTION id: 34, function_name: and, function_type: ordinary, result_type: UInt8"
"                    ARGUMENTS"
"                      LIST id: 35, nodes: 2"
"                        FUNCTION id: 36, function_name: less, function_type: ordinary, result_type: UInt8"
"                          ARGUMENTS"
"                            LIST id: 37, nodes: 2"
"                              COLUMN id: 38, column_name: acc_magnitude, result_type: Float64, source_id: 6"
"                              CONSTANT id: 39, constant_value: UInt64_10, constant_value_type: UInt8"
"                        FUNCTION id: 40, function_name: less, function_type: ordinary, result_type: UInt8"
"                          ARGUMENTS"
"                            LIST id: 41, nodes: 2"
"                              COLUMN id: 42, column_name: gyr_magnitude, result_type: Float64, source_id: 8"
"                              CONSTANT id: 43, constant_value: UInt64_10, constant_value_type: UInt8"
"            CONSTANT id: 44, constant_value: 'light_activity', constant_value_type: String"
"            FUNCTION id: 45, function_name: or, function_type: ordinary, result_type: UInt8"
"              ARGUMENTS"
"                LIST id: 46, nodes: 2"
"                  FUNCTION id: 47, function_name: greaterOrEquals, function_type: ordinary, result_type: UInt8"
"                    ARGUMENTS"
"                      LIST id: 48, nodes: 2"
"                        COLUMN id: 49, column_name: interval_HR, result_type: Float64, source_id: 3"
"                        CONSTANT id: 50, constant_value: UInt64_110, constant_value_type: UInt8"
"                  FUNCTION id: 51, function_name: and, function_type: ordinary, result_type: UInt8"
"                    ARGUMENTS"
"                      LIST id: 52, nodes: 2"
"                        FUNCTION id: 53, function_name: less, function_type: ordinary, result_type: UInt8"
"                          ARGUMENTS"
"                            LIST id: 54, nodes: 2"
"                              COLUMN id: 55, column_name: acc_magnitude, result_type: Float64, source_id: 6"
"                              CONSTANT id: 56, constant_value: UInt64_100, constant_value_type: UInt8"
"                        FUNCTION id: 57, function_name: less, function_type: ordinary, result_type: UInt8"
"                          ARGUMENTS"
"                            LIST id: 58, nodes: 2"
"                              COLUMN id: 59, column_name: gyr_magnitude, result_type: Float64, source_id: 8"
"                              CONSTANT id: 60, constant_value: UInt64_100, constant_value_type: UInt8"
"            CONSTANT id: 61, constant_value: 'heavy_activity', constant_value_type: String"
"            CONSTANT id: 62, constant_value: 'misc', constant_value_type: String"
"  JOIN TREE"
"    JOIN id: 63, strictness: ALL, kind: INNER"
"      LEFT TABLE EXPRESSION"
"        JOIN id: 64, strictness: ALL, kind: INNER"
"          LEFT TABLE EXPRESSION"
"            JOIN id: 65, strictness: ALL, kind: INNER"
"              LEFT TABLE EXPRESSION"
"                QUERY id: 3, alias: __table1, is_subquery: 1, is_cte: 1, cte_name: HR_intervals"
"                  PROJECTION COLUMNS"
"                    time_interval DateTime('UTC')"
"                    interval_HR Float64"
"                  PROJECTION"
"                    LIST id: 66, nodes: 2"
"                      FUNCTION id: 67, function_name: toStartOfInterval, function_type: ordinary, result_type: DateTime('UTC')"
"                        ARGUMENTS"
"                          LIST id: 68, nodes: 2"
"                            COLUMN id: 69, column_name: ts, result_type: DateTime64(3, 'UTC'), source_id: 70"
"                            CONSTANT id: 71, constant_value: Int64_5, constant_value_type: IntervalMinute"
"                              EXPRESSION"
"                                FUNCTION id: 72, function_name: toIntervalMinute, function_type: ordinary, result_type: IntervalMinute"
"                                  ARGUMENTS"
"                                    LIST id: 73, nodes: 1"
"                                      CONSTANT id: 74, constant_value: UInt64_5, constant_value_type: UInt8"
"                      FUNCTION id: 75, function_name: avg, function_type: aggregate, result_type: Float64"
"                        ARGUMENTS"
"                          LIST id: 76, nodes: 1"
"                            COLUMN id: 77, column_name: HR, result_type: Float64, source_id: 70"
"                  JOIN TREE"
"                    TABLE id: 70, alias: __table2, table_name: sensor.hrm"
"                  GROUP BY"
"                    LIST id: 78, nodes: 1"
"                      FUNCTION id: 79, function_name: toStartOfInterval, function_type: ordinary, result_type: DateTime('UTC')"
"                        ARGUMENTS"
"                          LIST id: 80, nodes: 2"
"                            COLUMN id: 81, column_name: ts, result_type: DateTime64(3, 'UTC'), source_id: 70"
"                            CONSTANT id: 82, constant_value: Int64_5, constant_value_type: IntervalMinute"
"                              EXPRESSION"
"                                FUNCTION id: 83, function_name: toIntervalMinute, function_type: ordinary, result_type: IntervalMinute"
"                                  ARGUMENTS"
"                                    LIST id: 84, nodes: 1"
"                                      CONSTANT id: 85, constant_value: UInt64_5, constant_value_type: UInt8"
"              RIGHT TABLE EXPRESSION"
"                QUERY id: 86, alias: __table3, is_subquery: 1, is_cte: 1, cte_name: LIT_intervals"
"                  PROJECTION COLUMNS"
"                    time_interval DateTime('UTC')"
"                    is_light UInt8"
"                  PROJECTION"
"                    LIST id: 87, nodes: 2"
"                      FUNCTION id: 88, function_name: toStartOfInterval, function_type: ordinary, result_type: DateTime('UTC')"
"                        ARGUMENTS"
"                          LIST id: 89, nodes: 2"
"                            COLUMN id: 90, column_name: ts, result_type: DateTime64(3, 'UTC'), source_id: 91"
"                            CONSTANT id: 92, constant_value: Int64_5, constant_value_type: IntervalMinute"
"                              EXPRESSION"
"                                FUNCTION id: 93, function_name: toIntervalMinute, function_type: ordinary, result_type: IntervalMinute"
"                                  ARGUMENTS"
"                                    LIST id: 94, nodes: 1"
"                                      CONSTANT id: 95, constant_value: UInt64_5, constant_value_type: UInt8"
"                      FUNCTION id: 96, function_name: if, function_type: ordinary, result_type: UInt8"
"                        ARGUMENTS"
"                          LIST id: 97, nodes: 3"
"                            FUNCTION id: 98, function_name: greater, function_type: ordinary, result_type: UInt8"
"                              ARGUMENTS"
"                                LIST id: 99, nodes: 2"
"                                  FUNCTION id: 100, function_name: avg, function_type: aggregate, result_type: Float64"
"                                    ARGUMENTS"
"                                      LIST id: 101, nodes: 1"
"                                        COLUMN id: 102, column_name: ambient_light_intensity, result_type: Float64, source_id: 91"
"                                  CONSTANT id: 103, constant_value: UInt64_100, constant_value_type: UInt8"
"                            CONSTANT id: 104, constant_value: UInt64_1, constant_value_type: UInt8"
"                            CONSTANT id: 105, constant_value: UInt64_0, constant_value_type: UInt8"
"                  JOIN TREE"
"                    TABLE id: 91, alias: __table4, table_name: sensor.lit"
"                  GROUP BY"
"                    LIST id: 106, nodes: 1"
"                      FUNCTION id: 107, function_name: toStartOfInterval, function_type: ordinary, result_type: DateTime('UTC')"
"                        ARGUMENTS"
"                          LIST id: 108, nodes: 2"
"                            COLUMN id: 109, column_name: ts, result_type: DateTime64(3, 'UTC'), source_id: 91"
"                            CONSTANT id: 110, constant_value: Int64_5, constant_value_type: IntervalMinute"
"                              EXPRESSION"
"                                FUNCTION id: 111, function_name: toIntervalMinute, function_type: ordinary, result_type: IntervalMinute"
"                                  ARGUMENTS"
"                                    LIST id: 112, nodes: 1"
"                                      CONSTANT id: 113, constant_value: UInt64_5, constant_value_type: UInt8"
"              JOIN EXPRESSION"
"                FUNCTION id: 114, function_name: equals, function_type: ordinary, result_type: UInt8"
"                  ARGUMENTS"
"                    LIST id: 115, nodes: 2"
"                      COLUMN id: 116, column_name: time_interval, result_type: DateTime('UTC'), source_id: 3"
"                      COLUMN id: 117, column_name: time_interval, result_type: DateTime('UTC'), source_id: 86"
"          RIGHT TABLE EXPRESSION"
"            QUERY id: 6, alias: __table5, is_subquery: 1, is_cte: 1, cte_name: ACC_intervals"
"              PROJECTION COLUMNS"
"                time_interval DateTime('UTC')"
"                acc_magnitude Float64"
"              PROJECTION"
"                LIST id: 118, nodes: 2"
"                  FUNCTION id: 119, function_name: toStartOfInterval, function_type: ordinary, result_type: DateTime('UTC')"
"                    ARGUMENTS"
"                      LIST id: 120, nodes: 2"
"                        COLUMN id: 121, column_name: ts, result_type: DateTime64(3, 'UTC'), source_id: 122"
"                        CONSTANT id: 123, constant_value: Int64_5, constant_value_type: IntervalMinute"
"                          EXPRESSION"
"                            FUNCTION id: 124, function_name: toIntervalMinute, function_type: ordinary, result_type: IntervalMinute"
"                              ARGUMENTS"
"                                LIST id: 125, nodes: 1"
"                                  CONSTANT id: 126, constant_value: UInt64_5, constant_value_type: UInt8"
"                  FUNCTION id: 127, function_name: avg, function_type: aggregate, result_type: Float64"
"                    ARGUMENTS"
"                      LIST id: 128, nodes: 1"
"                        FUNCTION id: 129, function_name: plus, function_type: ordinary, result_type: Float64"
"                          ARGUMENTS"
"                            LIST id: 130, nodes: 2"
"                              FUNCTION id: 131, function_name: plus, function_type: ordinary, result_type: Float64"
"                                ARGUMENTS"
"                                  LIST id: 132, nodes: 2"
"                                    FUNCTION id: 133, function_name: multiply, function_type: ordinary, result_type: Float64"
"                                      ARGUMENTS"
"                                        LIST id: 134, nodes: 2"
"                                          COLUMN id: 135, column_name: x, result_type: Float64, source_id: 122"
"                                          COLUMN id: 136, column_name: x, result_type: Float64, source_id: 122"
"                                    FUNCTION id: 137, function_name: multiply, function_type: ordinary, result_type: Float64"
"                                      ARGUMENTS"
"                                        LIST id: 138, nodes: 2"
"                                          COLUMN id: 139, column_name: y, result_type: Float64, source_id: 122"
"                                          COLUMN id: 140, column_name: y, result_type: Float64, source_id: 122"
"                              FUNCTION id: 141, function_name: multiply, function_type: ordinary, result_type: Float64"
"                                ARGUMENTS"
"                                  LIST id: 142, nodes: 2"
"                                    COLUMN id: 143, column_name: z, result_type: Float64, source_id: 122"
"                                    COLUMN id: 144, column_name: z, result_type: Float64, source_id: 122"
"              JOIN TREE"
"                TABLE id: 122, alias: __table6, table_name: sensor.acc"
"              GROUP BY"
"                LIST id: 145, nodes: 1"
"                  FUNCTION id: 146, function_name: toStartOfInterval, function_type: ordinary, result_type: DateTime('UTC')"
"                    ARGUMENTS"
"                      LIST id: 147, nodes: 2"
"                        COLUMN id: 148, column_name: ts, result_type: DateTime64(3, 'UTC'), source_id: 122"
"                        CONSTANT id: 149, constant_value: Int64_5, constant_value_type: IntervalMinute"
"                          EXPRESSION"
"                            FUNCTION id: 150, function_name: toIntervalMinute, function_type: ordinary, result_type: IntervalMinute"
"                              ARGUMENTS"
"                                LIST id: 151, nodes: 1"
"                                  CONSTANT id: 152, constant_value: UInt64_5, constant_value_type: UInt8"
"          JOIN EXPRESSION"
"            FUNCTION id: 153, function_name: equals, function_type: ordinary, result_type: UInt8"
"              ARGUMENTS"
"                LIST id: 154, nodes: 2"
"                  COLUMN id: 155, column_name: time_interval, result_type: DateTime('UTC'), source_id: 3"
"                  COLUMN id: 156, column_name: time_interval, result_type: DateTime('UTC'), source_id: 6"
"      RIGHT TABLE EXPRESSION"
"        QUERY id: 8, alias: __table7, is_subquery: 1, is_cte: 1, cte_name: GYR_intervals"
"          PROJECTION COLUMNS"
"            time_interval DateTime('UTC')"
"            gyr_magnitude Float64"
"          PROJECTION"
"            LIST id: 157, nodes: 2"
"              FUNCTION id: 158, function_name: toStartOfInterval, function_type: ordinary, result_type: DateTime('UTC')"
"                ARGUMENTS"
"                  LIST id: 159, nodes: 2"
"                    COLUMN id: 160, column_name: ts, result_type: DateTime64(3, 'UTC'), source_id: 161"
"                    CONSTANT id: 162, constant_value: Int64_5, constant_value_type: IntervalMinute"
"                      EXPRESSION"
"                        FUNCTION id: 163, function_name: toIntervalMinute, function_type: ordinary, result_type: IntervalMinute"
"                          ARGUMENTS"
"                            LIST id: 164, nodes: 1"
"                              CONSTANT id: 165, constant_value: UInt64_5, constant_value_type: UInt8"
"              FUNCTION id: 166, function_name: avg, function_type: aggregate, result_type: Float64"
"                ARGUMENTS"
"                  LIST id: 167, nodes: 1"
"                    FUNCTION id: 168, function_name: plus, function_type: ordinary, result_type: Float64"
"                      ARGUMENTS"
"                        LIST id: 169, nodes: 2"
"                          FUNCTION id: 170, function_name: plus, function_type: ordinary, result_type: Float64"
"                            ARGUMENTS"
"                              LIST id: 171, nodes: 2"
"                                FUNCTION id: 172, function_name: multiply, function_type: ordinary, result_type: Float64"
"                                  ARGUMENTS"
"                                    LIST id: 173, nodes: 2"
"                                      COLUMN id: 174, column_name: x, result_type: Float64, source_id: 161"
"                                      COLUMN id: 175, column_name: x, result_type: Float64, source_id: 161"
"                                FUNCTION id: 176, function_name: multiply, function_type: ordinary, result_type: Float64"
"                                  ARGUMENTS"
"                                    LIST id: 177, nodes: 2"
"                                      COLUMN id: 178, column_name: y, result_type: Float64, source_id: 161"
"                                      COLUMN id: 179, column_name: y, result_type: Float64, source_id: 161"
"                          FUNCTION id: 180, function_name: multiply, function_type: ordinary, result_type: Float64"
"                            ARGUMENTS"
"                              LIST id: 181, nodes: 2"
"                                COLUMN id: 182, column_name: z, result_type: Float64, source_id: 161"
"                                COLUMN id: 183, column_name: z, result_type: Float64, source_id: 161"
"          JOIN TREE"
"            TABLE id: 161, alias: __table8, table_name: sensor.gyr"
"          GROUP BY"
"            LIST id: 184, nodes: 1"
"              FUNCTION id: 185, function_name: toStartOfInterval, function_type: ordinary, result_type: DateTime('UTC')"
"                ARGUMENTS"
"                  LIST id: 186, nodes: 2"
"                    COLUMN id: 187, column_name: ts, result_type: DateTime64(3, 'UTC'), source_id: 161"
"                    CONSTANT id: 188, constant_value: Int64_5, constant_value_type: IntervalMinute"
"                      EXPRESSION"
"                        FUNCTION id: 189, function_name: toIntervalMinute, function_type: ordinary, result_type: IntervalMinute"
"                          ARGUMENTS"
"                            LIST id: 190, nodes: 1"
"                              CONSTANT id: 191, constant_value: UInt64_5, constant_value_type: UInt8"
"      JOIN EXPRESSION"
"        FUNCTION id: 192, function_name: equals, function_type: ordinary, result_type: UInt8"
"          ARGUMENTS"
"            LIST id: 193, nodes: 2"
"              COLUMN id: 194, column_name: time_interval, result_type: DateTime('UTC'), source_id: 3"
"              COLUMN id: 195, column_name: time_interval, result_type: DateTime('UTC'), source_id: 8"
"  WHERE"
"    FUNCTION id: 196, function_name: equals, function_type: ordinary, result_type: UInt8"
"      ARGUMENTS"
"        LIST id: 197, nodes: 2"
"          COLUMN id: 198, column_name: is_light, result_type: UInt8, source_id: 86"
"          CONSTANT id: 199, constant_value: UInt64_1, constant_value_type: UInt8"
"  ORDER BY"
"    LIST id: 200, nodes: 1"
"      SORT id: 201, sort_direction: ASCENDING, with_fill: 0"
"        EXPRESSION"
"          COLUMN id: 202, column_name: time_interval, result_type: DateTime('UTC'), source_id: 3"
>

--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

--- Category CHBD Q2 execution tree ---

<bound method PyCapsule.data of "QUERY id: 0"
"  PROJECTION COLUMNS"
"    h.time_interval DateTime('UTC')"
"    interval_HR Float64"
"    acc_magnitude Float64"
"    gyr_magnitude Float64"
"    type_of_activity String"
"  PROJECTION"
"    LIST id: 1, nodes: 5"
"      COLUMN id: 2, column_name: time_interval, result_type: DateTime('UTC'), source_id: 3"
"      COLUMN id: 4, column_name: interval_HR, result_type: Float64, source_id: 3"
"      COLUMN id: 5, column_name: acc_magnitude, result_type: Float64, source_id: 6"
"      COLUMN id: 7, column_name: gyr_magnitude, result_type: Float64, source_id: 8"
"      FUNCTION id: 9, function_name: multiIf, function_type: ordinary, result_type: String"
"        ARGUMENTS"
"          LIST id: 10, nodes: 7"
"            FUNCTION id: 11, function_name: or, function_type: ordinary, result_type: UInt8"
"              ARGUMENTS"
"                LIST id: 12, nodes: 2"
"                  FUNCTION id: 13, function_name: less, function_type: ordinary, result_type: UInt8"
"                    ARGUMENTS"
"                      LIST id: 14, nodes: 2"
"                        COLUMN id: 15, column_name: interval_HR, result_type: Float64, source_id: 3"
"                        CONSTANT id: 16, constant_value: UInt64_80, constant_value_type: UInt8"
"                  FUNCTION id: 17, function_name: and, function_type: ordinary, result_type: UInt8"
"                    ARGUMENTS"
"                      LIST id: 18, nodes: 2"
"                        FUNCTION id: 19, function_name: less, function_type: ordinary, result_type: UInt8"
"                          ARGUMENTS"
"                            LIST id: 20, nodes: 2"
"                              COLUMN id: 21, column_name: acc_magnitude, result_type: Float64, source_id: 6"
"                              CONSTANT id: 22, constant_value: UInt64_2, constant_value_type: UInt8"
"                        FUNCTION id: 23, function_name: less, function_type: ordinary, result_type: UInt8"
"                          ARGUMENTS"
"                            LIST id: 24, nodes: 2"
"                              COLUMN id: 25, column_name: gyr_magnitude, result_type: Float64, source_id: 8"
"                              CONSTANT id: 26, constant_value: UInt64_2, constant_value_type: UInt8"
"            CONSTANT id: 27, constant_value: 'sitting', constant_value_type: String"
"            FUNCTION id: 28, function_name: or, function_type: ordinary, result_type: UInt8"
"              ARGUMENTS"
"                LIST id: 29, nodes: 2"
"                  FUNCTION id: 30, function_name: less, function_type: ordinary, result_type: UInt8"
"                    ARGUMENTS"
"                      LIST id: 31, nodes: 2"
"                        COLUMN id: 32, column_name: interval_HR, result_type: Float64, source_id: 3"
"                        CONSTANT id: 33, constant_value: UInt64_110, constant_value_type: UInt8"
"                  FUNCTION id: 34, function_name: and, function_type: ordinary, result_type: UInt8"
"                    ARGUMENTS"
"                      LIST id: 35, nodes: 2"
"                        FUNCTION id: 36, function_name: less, function_type: ordinary, result_type: UInt8"
"                          ARGUMENTS"
"                            LIST id: 37, nodes: 2"
"                              COLUMN id: 38, column_name: acc_magnitude, result_type: Float64, source_id: 6"
"                              CONSTANT id: 39, constant_value: UInt64_10, constant_value_type: UInt8"
"                        FUNCTION id: 40, function_name: less, function_type: ordinary, result_type: UInt8"
"                          ARGUMENTS"
"                            LIST id: 41, nodes: 2"
"                              COLUMN id: 42, column_name: gyr_magnitude, result_type: Float64, source_id: 8"
"                              CONSTANT id: 43, constant_value: UInt64_10, constant_value_type: UInt8"
"            CONSTANT id: 44, constant_value: 'light_activity', constant_value_type: String"
"            FUNCTION id: 45, function_name: or, function_type: ordinary, result_type: UInt8"
"              ARGUMENTS"
"                LIST id: 46, nodes: 2"
"                  FUNCTION id: 47, function_name: greaterOrEquals, function_type: ordinary, result_type: UInt8"
"                    ARGUMENTS"
"                      LIST id: 48, nodes: 2"
"                        COLUMN id: 49, column_name: interval_HR, result_type: Float64, source_id: 3"
"                        CONSTANT id: 50, constant_value: UInt64_110, constant_value_type: UInt8"
"                  FUNCTION id: 51, function_name: and, function_type: ordinary, result_type: UInt8"
"                    ARGUMENTS"
"                      LIST id: 52, nodes: 2"
"                        FUNCTION id: 53, function_name: less, function_type: ordinary, result_type: UInt8"
"                          ARGUMENTS"
"                            LIST id: 54, nodes: 2"
"                              COLUMN id: 55, column_name: acc_magnitude, result_type: Float64, source_id: 6"
"                              CONSTANT id: 56, constant_value: UInt64_100, constant_value_type: UInt8"
"                        FUNCTION id: 57, function_name: less, function_type: ordinary, result_type: UInt8"
"                          ARGUMENTS"
"                            LIST id: 58, nodes: 2"
"                              COLUMN id: 59, column_name: gyr_magnitude, result_type: Float64, source_id: 8"
"                              CONSTANT id: 60, constant_value: UInt64_100, constant_value_type: UInt8"
"            CONSTANT id: 61, constant_value: 'heavy_activity', constant_value_type: String"
"            CONSTANT id: 62, constant_value: 'misc', constant_value_type: String"
"  JOIN TREE"
"    JOIN id: 63, strictness: ALL, kind: INNER"
"      LEFT TABLE EXPRESSION"
"        JOIN id: 64, strictness: ALL, kind: INNER"
"          LEFT TABLE EXPRESSION"
"            JOIN id: 65, strictness: ALL, kind: INNER"
"              LEFT TABLE EXPRESSION"
"                QUERY id: 3, alias: __table1, is_subquery: 1, is_cte: 1, cte_name: HR_intervals"
"                  PROJECTION COLUMNS"
"                    time_interval DateTime('UTC')"
"                    interval_HR Float64"
"                  PROJECTION"
"                    LIST id: 66, nodes: 2"
"                      FUNCTION id: 67, function_name: toStartOfInterval, function_type: ordinary, result_type: DateTime('UTC')"
"                        ARGUMENTS"
"                          LIST id: 68, nodes: 2"
"                            COLUMN id: 69, column_name: ts, result_type: DateTime64(3, 'UTC'), source_id: 70"
"                            CONSTANT id: 71, constant_value: Int64_5, constant_value_type: IntervalMinute"
"                              EXPRESSION"
"                                FUNCTION id: 72, function_name: toIntervalMinute, function_type: ordinary, result_type: IntervalMinute"
"                                  ARGUMENTS"
"                                    LIST id: 73, nodes: 1"
"                                      CONSTANT id: 74, constant_value: UInt64_5, constant_value_type: UInt8"
"                      FUNCTION id: 75, function_name: avg, function_type: aggregate, result_type: Float64"
"                        ARGUMENTS"
"                          LIST id: 76, nodes: 1"
"                            COLUMN id: 77, column_name: HR, result_type: Float64, source_id: 70"
"                  JOIN TREE"
"                    TABLE id: 70, alias: __table2, table_name: sensor.hrm"
"                  GROUP BY"
"                    LIST id: 78, nodes: 1"
"                      FUNCTION id: 79, function_name: toStartOfInterval, function_type: ordinary, result_type: DateTime('UTC')"
"                        ARGUMENTS"
"                          LIST id: 80, nodes: 2"
"                            COLUMN id: 81, column_name: ts, result_type: DateTime64(3, 'UTC'), source_id: 70"
"                            CONSTANT id: 82, constant_value: Int64_5, constant_value_type: IntervalMinute"
"                              EXPRESSION"
"                                FUNCTION id: 83, function_name: toIntervalMinute, function_type: ordinary, result_type: IntervalMinute"
"                                  ARGUMENTS"
"                                    LIST id: 84, nodes: 1"
"                                      CONSTANT id: 85, constant_value: UInt64_5, constant_value_type: UInt8"
"              RIGHT TABLE EXPRESSION"
"                QUERY id: 86, alias: __table3, is_subquery: 1, is_cte: 1, cte_name: LIT_intervals"
"                  PROJECTION COLUMNS"
"                    time_interval DateTime('UTC')"
"                    is_light UInt8"
"                  PROJECTION"
"                    LIST id: 87, nodes: 2"
"                      FUNCTION id: 88, function_name: toStartOfInterval, function_type: ordinary, result_type: DateTime('UTC')"
"                        ARGUMENTS"
"                          LIST id: 89, nodes: 2"
"                            COLUMN id: 90, column_name: ts, result_type: DateTime64(3, 'UTC'), source_id: 91"
"                            CONSTANT id: 92, constant_value: Int64_5, constant_value_type: IntervalMinute"
"                              EXPRESSION"
"                                FUNCTION id: 93, function_name: toIntervalMinute, function_type: ordinary, result_type: IntervalMinute"
"                                  ARGUMENTS"
"                                    LIST id: 94, nodes: 1"
"                                      CONSTANT id: 95, constant_value: UInt64_5, constant_value_type: UInt8"
"                      FUNCTION id: 96, function_name: if, function_type: ordinary, result_type: UInt8"
"                        ARGUMENTS"
"                          LIST id: 97, nodes: 3"
"                            FUNCTION id: 98, function_name: greater, function_type: ordinary, result_type: UInt8"
"                              ARGUMENTS"
"                                LIST id: 99, nodes: 2"
"                                  FUNCTION id: 100, function_name: avg, function_type: aggregate, result_type: Float64"
"                                    ARGUMENTS"
"                                      LIST id: 101, nodes: 1"
"                                        COLUMN id: 102, column_name: ambient_light_intensity, result_type: Float64, source_id: 91"
"                                  CONSTANT id: 103, constant_value: UInt64_100, constant_value_type: UInt8"
"                            CONSTANT id: 104, constant_value: UInt64_1, constant_value_type: UInt8"
"                            CONSTANT id: 105, constant_value: UInt64_0, constant_value_type: UInt8"
"                  JOIN TREE"
"                    TABLE id: 91, alias: __table4, table_name: sensor.lit"
"                  GROUP BY"
"                    LIST id: 106, nodes: 1"
"                      FUNCTION id: 107, function_name: toStartOfInterval, function_type: ordinary, result_type: DateTime('UTC')"
"                        ARGUMENTS"
"                          LIST id: 108, nodes: 2"
"                            COLUMN id: 109, column_name: ts, result_type: DateTime64(3, 'UTC'), source_id: 91"
"                            CONSTANT id: 110, constant_value: Int64_5, constant_value_type: IntervalMinute"
"                              EXPRESSION"
"                                FUNCTION id: 111, function_name: toIntervalMinute, function_type: ordinary, result_type: IntervalMinute"
"                                  ARGUMENTS"
"                                    LIST id: 112, nodes: 1"
"                                      CONSTANT id: 113, constant_value: UInt64_5, constant_value_type: UInt8"
"              JOIN EXPRESSION"
"                FUNCTION id: 114, function_name: and, function_type: ordinary, result_type: UInt8"
"                  ARGUMENTS"
"                    LIST id: 115, nodes: 2"
"                      FUNCTION id: 116, function_name: equals, function_type: ordinary, result_type: UInt8"
"                        ARGUMENTS"
"                          LIST id: 117, nodes: 2"
"                            COLUMN id: 118, column_name: time_interval, result_type: DateTime('UTC'), source_id: 3"
"                            COLUMN id: 119, column_name: time_interval, result_type: DateTime('UTC'), source_id: 86"
"                      FUNCTION id: 120, function_name: equals, function_type: ordinary, result_type: UInt8"
"                        ARGUMENTS"
"                          LIST id: 121, nodes: 2"
"                            COLUMN id: 122, column_name: is_light, result_type: UInt8, source_id: 86"
"                            CONSTANT id: 123, constant_value: UInt64_1, constant_value_type: UInt8"
"          RIGHT TABLE EXPRESSION"
"            QUERY id: 6, alias: __table5, is_subquery: 1, is_cte: 1, cte_name: ACC_intervals"
"              PROJECTION COLUMNS"
"                time_interval DateTime('UTC')"
"                acc_magnitude Float64"
"              PROJECTION"
"                LIST id: 124, nodes: 2"
"                  FUNCTION id: 125, function_name: toStartOfInterval, function_type: ordinary, result_type: DateTime('UTC')"
"                    ARGUMENTS"
"                      LIST id: 126, nodes: 2"
"                        COLUMN id: 127, column_name: ts, result_type: DateTime64(3, 'UTC'), source_id: 128"
"                        CONSTANT id: 129, constant_value: Int64_5, constant_value_type: IntervalMinute"
"                          EXPRESSION"
"                            FUNCTION id: 130, function_name: toIntervalMinute, function_type: ordinary, result_type: IntervalMinute"
"                              ARGUMENTS"
"                                LIST id: 131, nodes: 1"
"                                  CONSTANT id: 132, constant_value: UInt64_5, constant_value_type: UInt8"
"                  FUNCTION id: 133, function_name: avg, function_type: aggregate, result_type: Float64"
"                    ARGUMENTS"
"                      LIST id: 134, nodes: 1"
"                        FUNCTION id: 135, function_name: plus, function_type: ordinary, result_type: Float64"
"                          ARGUMENTS"
"                            LIST id: 136, nodes: 2"
"                              FUNCTION id: 137, function_name: plus, function_type: ordinary, result_type: Float64"
"                                ARGUMENTS"
"                                  LIST id: 138, nodes: 2"
"                                    FUNCTION id: 139, function_name: multiply, function_type: ordinary, result_type: Float64"
"                                      ARGUMENTS"
"                                        LIST id: 140, nodes: 2"
"                                          COLUMN id: 141, column_name: x, result_type: Float64, source_id: 128"
"                                          COLUMN id: 142, column_name: x, result_type: Float64, source_id: 128"
"                                    FUNCTION id: 143, function_name: multiply, function_type: ordinary, result_type: Float64"
"                                      ARGUMENTS"
"                                        LIST id: 144, nodes: 2"
"                                          COLUMN id: 145, column_name: y, result_type: Float64, source_id: 128"
"                                          COLUMN id: 146, column_name: y, result_type: Float64, source_id: 128"
"                              FUNCTION id: 147, function_name: multiply, function_type: ordinary, result_type: Float64"
"                                ARGUMENTS"
"                                  LIST id: 148, nodes: 2"
"                                    COLUMN id: 149, column_name: z, result_type: Float64, source_id: 128"
"                                    COLUMN id: 150, column_name: z, result_type: Float64, source_id: 128"
"              JOIN TREE"
"                TABLE id: 128, alias: __table6, table_name: sensor.acc"
"              GROUP BY"
"                LIST id: 151, nodes: 1"
"                  FUNCTION id: 152, function_name: toStartOfInterval, function_type: ordinary, result_type: DateTime('UTC')"
"                    ARGUMENTS"
"                      LIST id: 153, nodes: 2"
"                        COLUMN id: 154, column_name: ts, result_type: DateTime64(3, 'UTC'), source_id: 128"
"                        CONSTANT id: 155, constant_value: Int64_5, constant_value_type: IntervalMinute"
"                          EXPRESSION"
"                            FUNCTION id: 156, function_name: toIntervalMinute, function_type: ordinary, result_type: IntervalMinute"
"                              ARGUMENTS"
"                                LIST id: 157, nodes: 1"
"                                  CONSTANT id: 158, constant_value: UInt64_5, constant_value_type: UInt8"
"          JOIN EXPRESSION"
"            FUNCTION id: 159, function_name: equals, function_type: ordinary, result_type: UInt8"
"              ARGUMENTS"
"                LIST id: 160, nodes: 2"
"                  COLUMN id: 161, column_name: time_interval, result_type: DateTime('UTC'), source_id: 3"
"                  COLUMN id: 162, column_name: time_interval, result_type: DateTime('UTC'), source_id: 6"
"      RIGHT TABLE EXPRESSION"
"        QUERY id: 8, alias: __table7, is_subquery: 1, is_cte: 1, cte_name: GYR_intervals"
"          PROJECTION COLUMNS"
"            time_interval DateTime('UTC')"
"            gyr_magnitude Float64"
"          PROJECTION"
"            LIST id: 163, nodes: 2"
"              FUNCTION id: 164, function_name: toStartOfInterval, function_type: ordinary, result_type: DateTime('UTC')"
"                ARGUMENTS"
"                  LIST id: 165, nodes: 2"
"                    COLUMN id: 166, column_name: ts, result_type: DateTime64(3, 'UTC'), source_id: 167"
"                    CONSTANT id: 168, constant_value: Int64_5, constant_value_type: IntervalMinute"
"                      EXPRESSION"
"                        FUNCTION id: 169, function_name: toIntervalMinute, function_type: ordinary, result_type: IntervalMinute"
"                          ARGUMENTS"
"                            LIST id: 170, nodes: 1"
"                              CONSTANT id: 171, constant_value: UInt64_5, constant_value_type: UInt8"
"              FUNCTION id: 172, function_name: avg, function_type: aggregate, result_type: Float64"
"                ARGUMENTS"
"                  LIST id: 173, nodes: 1"
"                    FUNCTION id: 174, function_name: plus, function_type: ordinary, result_type: Float64"
"                      ARGUMENTS"
"                        LIST id: 175, nodes: 2"
"                          FUNCTION id: 176, function_name: plus, function_type: ordinary, result_type: Float64"
"                            ARGUMENTS"
"                              LIST id: 177, nodes: 2"
"                                FUNCTION id: 178, function_name: multiply, function_type: ordinary, result_type: Float64"
"                                  ARGUMENTS"
"                                    LIST id: 179, nodes: 2"
"                                      COLUMN id: 180, column_name: x, result_type: Float64, source_id: 167"
"                                      COLUMN id: 181, column_name: x, result_type: Float64, source_id: 167"
"                                FUNCTION id: 182, function_name: multiply, function_type: ordinary, result_type: Float64"
"                                  ARGUMENTS"
"                                    LIST id: 183, nodes: 2"
"                                      COLUMN id: 184, column_name: y, result_type: Float64, source_id: 167"
"                                      COLUMN id: 185, column_name: y, result_type: Float64, source_id: 167"
"                          FUNCTION id: 186, function_name: multiply, function_type: ordinary, result_type: Float64"
"                            ARGUMENTS"
"                              LIST id: 187, nodes: 2"
"                                COLUMN id: 188, column_name: z, result_type: Float64, source_id: 167"
"                                COLUMN id: 189, column_name: z, result_type: Float64, source_id: 167"
"          JOIN TREE"
"            TABLE id: 167, alias: __table8, table_name: sensor.gyr"
"          GROUP BY"
"            LIST id: 190, nodes: 1"
"              FUNCTION id: 191, function_name: toStartOfInterval, function_type: ordinary, result_type: DateTime('UTC')"
"                ARGUMENTS"
"                  LIST id: 192, nodes: 2"
"                    COLUMN id: 193, column_name: ts, result_type: DateTime64(3, 'UTC'), source_id: 167"
"                    CONSTANT id: 194, constant_value: Int64_5, constant_value_type: IntervalMinute"
"                      EXPRESSION"
"                        FUNCTION id: 195, function_name: toIntervalMinute, function_type: ordinary, result_type: IntervalMinute"
"                          ARGUMENTS"
"                            LIST id: 196, nodes: 1"
"                              CONSTANT id: 197, constant_value: UInt64_5, constant_value_type: UInt8"
"      JOIN EXPRESSION"
"        FUNCTION id: 198, function_name: equals, function_type: ordinary, result_type: UInt8"
"          ARGUMENTS"
"            LIST id: 199, nodes: 2"
"              COLUMN id: 200, column_name: time_interval, result_type: DateTime('UTC'), source_id: 3"
"              COLUMN id: 201, column_name: time_interval, result_type: DateTime('UTC'), source_id: 8"
"  ORDER BY"
"    LIST id: 202, nodes: 1"
"      SORT id: 203, sort_direction: ASCENDING, with_fill: 0"
"        EXPRESSION"
"          COLUMN id: 204, column_name: time_interval, result_type: DateTime('UTC'), source_id: 3"
>

--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

--- Category CHBD Q3 execution tree ---

<bound method PyCapsule.data of "QUERY id: 0"
"  PROJECTION COLUMNS"
"    h.time_interval DateTime('UTC')"
"    interval_HR Float64"
"    acc_magnitude Float64"
"    gyr_magnitude Float64"
"    type_of_activity String"
"  PROJECTION"
"    LIST id: 1, nodes: 5"
"      COLUMN id: 2, column_name: time_interval, result_type: DateTime('UTC'), source_id: 3"
"      COLUMN id: 4, column_name: interval_HR, result_type: Float64, source_id: 3"
"      COLUMN id: 5, column_name: acc_magnitude, result_type: Float64, source_id: 6"
"      COLUMN id: 7, column_name: gyr_magnitude, result_type: Float64, source_id: 8"
"      FUNCTION id: 9, function_name: multiIf, function_type: ordinary, result_type: String"
"        ARGUMENTS"
"          LIST id: 10, nodes: 7"
"            FUNCTION id: 11, function_name: or, function_type: ordinary, result_type: UInt8"
"              ARGUMENTS"
"                LIST id: 12, nodes: 2"
"                  FUNCTION id: 13, function_name: less, function_type: ordinary, result_type: UInt8"
"                    ARGUMENTS"
"                      LIST id: 14, nodes: 2"
"                        COLUMN id: 15, column_name: interval_HR, result_type: Float64, source_id: 3"
"                        CONSTANT id: 16, constant_value: UInt64_80, constant_value_type: UInt8"
"                  FUNCTION id: 17, function_name: and, function_type: ordinary, result_type: UInt8"
"                    ARGUMENTS"
"                      LIST id: 18, nodes: 2"
"                        FUNCTION id: 19, function_name: less, function_type: ordinary, result_type: UInt8"
"                          ARGUMENTS"
"                            LIST id: 20, nodes: 2"
"                              COLUMN id: 21, column_name: acc_magnitude, result_type: Float64, source_id: 6"
"                              CONSTANT id: 22, constant_value: UInt64_2, constant_value_type: UInt8"
"                        FUNCTION id: 23, function_name: less, function_type: ordinary, result_type: UInt8"
"                          ARGUMENTS"
"                            LIST id: 24, nodes: 2"
"                              COLUMN id: 25, column_name: gyr_magnitude, result_type: Float64, source_id: 8"
"                              CONSTANT id: 26, constant_value: UInt64_2, constant_value_type: UInt8"
"            CONSTANT id: 27, constant_value: 'sitting', constant_value_type: String"
"            FUNCTION id: 28, function_name: or, function_type: ordinary, result_type: UInt8"
"              ARGUMENTS"
"                LIST id: 29, nodes: 2"
"                  FUNCTION id: 30, function_name: less, function_type: ordinary, result_type: UInt8"
"                    ARGUMENTS"
"                      LIST id: 31, nodes: 2"
"                        COLUMN id: 32, column_name: interval_HR, result_type: Float64, source_id: 3"
"                        CONSTANT id: 33, constant_value: UInt64_110, constant_value_type: UInt8"
"                  FUNCTION id: 34, function_name: and, function_type: ordinary, result_type: UInt8"
"                    ARGUMENTS"
"                      LIST id: 35, nodes: 2"
"                        FUNCTION id: 36, function_name: less, function_type: ordinary, result_type: UInt8"
"                          ARGUMENTS"
"                            LIST id: 37, nodes: 2"
"                              COLUMN id: 38, column_name: acc_magnitude, result_type: Float64, source_id: 6"
"                              CONSTANT id: 39, constant_value: UInt64_10, constant_value_type: UInt8"
"                        FUNCTION id: 40, function_name: less, function_type: ordinary, result_type: UInt8"
"                          ARGUMENTS"
"                            LIST id: 41, nodes: 2"
"                              COLUMN id: 42, column_name: gyr_magnitude, result_type: Float64, source_id: 8"
"                              CONSTANT id: 43, constant_value: UInt64_10, constant_value_type: UInt8"
"            CONSTANT id: 44, constant_value: 'light_activity', constant_value_type: String"
"            FUNCTION id: 45, function_name: or, function_type: ordinary, result_type: UInt8"
"              ARGUMENTS"
"                LIST id: 46, nodes: 2"
"                  FUNCTION id: 47, function_name: greaterOrEquals, function_type: ordinary, result_type: UInt8"
"                    ARGUMENTS"
"                      LIST id: 48, nodes: 2"
"                        COLUMN id: 49, column_name: interval_HR, result_type: Float64, source_id: 3"
"                        CONSTANT id: 50, constant_value: UInt64_110, constant_value_type: UInt8"
"                  FUNCTION id: 51, function_name: and, function_type: ordinary, result_type: UInt8"
"                    ARGUMENTS"
"                      LIST id: 52, nodes: 2"
"                        FUNCTION id: 53, function_name: less, function_type: ordinary, result_type: UInt8"
"                          ARGUMENTS"
"                            LIST id: 54, nodes: 2"
"                              COLUMN id: 55, column_name: acc_magnitude, result_type: Float64, source_id: 6"
"                              CONSTANT id: 56, constant_value: UInt64_100, constant_value_type: UInt8"
"                        FUNCTION id: 57, function_name: less, function_type: ordinary, result_type: UInt8"
"                          ARGUMENTS"
"                            LIST id: 58, nodes: 2"
"                              COLUMN id: 59, column_name: gyr_magnitude, result_type: Float64, source_id: 8"
"                              CONSTANT id: 60, constant_value: UInt64_100, constant_value_type: UInt8"
"            CONSTANT id: 61, constant_value: 'heavy_activity', constant_value_type: String"
"            CONSTANT id: 62, constant_value: 'misc', constant_value_type: String"
"  JOIN TREE"
"    JOIN id: 63, strictness: ALL, kind: INNER"
"      LEFT TABLE EXPRESSION"
"        JOIN id: 64, strictness: ALL, kind: INNER"
"          LEFT TABLE EXPRESSION"
"            JOIN id: 65, strictness: ALL, kind: INNER"
"              LEFT TABLE EXPRESSION"
"                QUERY id: 3, alias: __table1, is_subquery: 1, is_cte: 1, cte_name: HR_intervals"
"                  PROJECTION COLUMNS"
"                    time_interval DateTime('UTC')"
"                    interval_HR Float64"
"                  PROJECTION"
"                    LIST id: 66, nodes: 2"
"                      FUNCTION id: 67, function_name: toStartOfInterval, function_type: ordinary, result_type: DateTime('UTC')"
"                        ARGUMENTS"
"                          LIST id: 68, nodes: 2"
"                            COLUMN id: 69, column_name: ts, result_type: DateTime64(3, 'UTC'), source_id: 70"
"                            CONSTANT id: 71, constant_value: Int64_5, constant_value_type: IntervalMinute"
"                              EXPRESSION"
"                                FUNCTION id: 72, function_name: toIntervalMinute, function_type: ordinary, result_type: IntervalMinute"
"                                  ARGUMENTS"
"                                    LIST id: 73, nodes: 1"
"                                      CONSTANT id: 74, constant_value: UInt64_5, constant_value_type: UInt8"
"                      FUNCTION id: 75, function_name: avg, function_type: aggregate, result_type: Float64"
"                        ARGUMENTS"
"                          LIST id: 76, nodes: 1"
"                            COLUMN id: 77, column_name: HR, result_type: Float64, source_id: 70"
"                  JOIN TREE"
"                    TABLE id: 70, alias: __table2, table_name: sensor.hrm"
"                  GROUP BY"
"                    LIST id: 78, nodes: 1"
"                      FUNCTION id: 79, function_name: toStartOfInterval, function_type: ordinary, result_type: DateTime('UTC')"
"                        ARGUMENTS"
"                          LIST id: 80, nodes: 2"
"                            COLUMN id: 81, column_name: ts, result_type: DateTime64(3, 'UTC'), source_id: 70"
"                            CONSTANT id: 82, constant_value: Int64_5, constant_value_type: IntervalMinute"
"                              EXPRESSION"
"                                FUNCTION id: 83, function_name: toIntervalMinute, function_type: ordinary, result_type: IntervalMinute"
"                                  ARGUMENTS"
"                                    LIST id: 84, nodes: 1"
"                                      CONSTANT id: 85, constant_value: UInt64_5, constant_value_type: UInt8"
"              RIGHT TABLE EXPRESSION"
"                QUERY id: 86, alias: __table3, is_subquery: 1, is_cte: 1, cte_name: LIT_intervals"
"                  PROJECTION COLUMNS"
"                    time_interval DateTime('UTC')"
"                  PROJECTION"
"                    LIST id: 87, nodes: 1"
"                      FUNCTION id: 88, function_name: toStartOfInterval, function_type: ordinary, result_type: DateTime('UTC')"
"                        ARGUMENTS"
"                          LIST id: 89, nodes: 2"
"                            COLUMN id: 90, column_name: ts, result_type: DateTime64(3, 'UTC'), source_id: 91"
"                            CONSTANT id: 92, constant_value: Int64_5, constant_value_type: IntervalMinute"
"                              EXPRESSION"
"                                FUNCTION id: 93, function_name: toIntervalMinute, function_type: ordinary, result_type: IntervalMinute"
"                                  ARGUMENTS"
"                                    LIST id: 94, nodes: 1"
"                                      CONSTANT id: 95, constant_value: UInt64_5, constant_value_type: UInt8"
"                  JOIN TREE"
"                    TABLE id: 91, alias: __table4, table_name: sensor.lit"
"                  GROUP BY"
"                    LIST id: 96, nodes: 1"
"                      FUNCTION id: 97, function_name: toStartOfInterval, function_type: ordinary, result_type: DateTime('UTC')"
"                        ARGUMENTS"
"                          LIST id: 98, nodes: 2"
"                            COLUMN id: 99, column_name: ts, result_type: DateTime64(3, 'UTC'), source_id: 91"
"                            CONSTANT id: 100, constant_value: Int64_5, constant_value_type: IntervalMinute"
"                              EXPRESSION"
"                                FUNCTION id: 101, function_name: toIntervalMinute, function_type: ordinary, result_type: IntervalMinute"
"                                  ARGUMENTS"
"                                    LIST id: 102, nodes: 1"
"                                      CONSTANT id: 103, constant_value: UInt64_5, constant_value_type: UInt8"
"                  HAVING"
"                    FUNCTION id: 104, function_name: greater, function_type: ordinary, result_type: UInt8"
"                      ARGUMENTS"
"                        LIST id: 105, nodes: 2"
"                          FUNCTION id: 106, function_name: avg, function_type: aggregate, result_type: Float64"
"                            ARGUMENTS"
"                              LIST id: 107, nodes: 1"
"                                COLUMN id: 108, column_name: ambient_light_intensity, result_type: Float64, source_id: 91"
"                          CONSTANT id: 109, constant_value: UInt64_100, constant_value_type: UInt8"
"              JOIN EXPRESSION"
"                FUNCTION id: 110, function_name: equals, function_type: ordinary, result_type: UInt8"
"                  ARGUMENTS"
"                    LIST id: 111, nodes: 2"
"                      COLUMN id: 112, column_name: time_interval, result_type: DateTime('UTC'), source_id: 3"
"                      COLUMN id: 113, column_name: time_interval, result_type: DateTime('UTC'), source_id: 86"
"          RIGHT TABLE EXPRESSION"
"            QUERY id: 6, alias: __table5, is_subquery: 1, is_cte: 1, cte_name: ACC_intervals"
"              PROJECTION COLUMNS"
"                time_interval DateTime('UTC')"
"                acc_magnitude Float64"
"              PROJECTION"
"                LIST id: 114, nodes: 2"
"                  FUNCTION id: 115, function_name: toStartOfInterval, function_type: ordinary, result_type: DateTime('UTC')"
"                    ARGUMENTS"
"                      LIST id: 116, nodes: 2"
"                        COLUMN id: 117, column_name: ts, result_type: DateTime64(3, 'UTC'), source_id: 118"
"                        CONSTANT id: 119, constant_value: Int64_5, constant_value_type: IntervalMinute"
"                          EXPRESSION"
"                            FUNCTION id: 120, function_name: toIntervalMinute, function_type: ordinary, result_type: IntervalMinute"
"                              ARGUMENTS"
"                                LIST id: 121, nodes: 1"
"                                  CONSTANT id: 122, constant_value: UInt64_5, constant_value_type: UInt8"
"                  FUNCTION id: 123, function_name: avg, function_type: aggregate, result_type: Float64"
"                    ARGUMENTS"
"                      LIST id: 124, nodes: 1"
"                        FUNCTION id: 125, function_name: plus, function_type: ordinary, result_type: Float64"
"                          ARGUMENTS"
"                            LIST id: 126, nodes: 2"
"                              FUNCTION id: 127, function_name: plus, function_type: ordinary, result_type: Float64"
"                                ARGUMENTS"
"                                  LIST id: 128, nodes: 2"
"                                    FUNCTION id: 129, function_name: multiply, function_type: ordinary, result_type: Float64"
"                                      ARGUMENTS"
"                                        LIST id: 130, nodes: 2"
"                                          COLUMN id: 131, column_name: x, result_type: Float64, source_id: 118"
"                                          COLUMN id: 132, column_name: x, result_type: Float64, source_id: 118"
"                                    FUNCTION id: 133, function_name: multiply, function_type: ordinary, result_type: Float64"
"                                      ARGUMENTS"
"                                        LIST id: 134, nodes: 2"
"                                          COLUMN id: 135, column_name: y, result_type: Float64, source_id: 118"
"                                          COLUMN id: 136, column_name: y, result_type: Float64, source_id: 118"
"                              FUNCTION id: 137, function_name: multiply, function_type: ordinary, result_type: Float64"
"                                ARGUMENTS"
"                                  LIST id: 138, nodes: 2"
"                                    COLUMN id: 139, column_name: z, result_type: Float64, source_id: 118"
"                                    COLUMN id: 140, column_name: z, result_type: Float64, source_id: 118"
"              JOIN TREE"
"                TABLE id: 118, alias: __table6, table_name: sensor.acc"
"              GROUP BY"
"                LIST id: 141, nodes: 1"
"                  FUNCTION id: 142, function_name: toStartOfInterval, function_type: ordinary, result_type: DateTime('UTC')"
"                    ARGUMENTS"
"                      LIST id: 143, nodes: 2"
"                        COLUMN id: 144, column_name: ts, result_type: DateTime64(3, 'UTC'), source_id: 118"
"                        CONSTANT id: 145, constant_value: Int64_5, constant_value_type: IntervalMinute"
"                          EXPRESSION"
"                            FUNCTION id: 146, function_name: toIntervalMinute, function_type: ordinary, result_type: IntervalMinute"
"                              ARGUMENTS"
"                                LIST id: 147, nodes: 1"
"                                  CONSTANT id: 148, constant_value: UInt64_5, constant_value_type: UInt8"
"          JOIN EXPRESSION"
"            FUNCTION id: 149, function_name: equals, function_type: ordinary, result_type: UInt8"
"              ARGUMENTS"
"                LIST id: 150, nodes: 2"
"                  COLUMN id: 151, column_name: time_interval, result_type: DateTime('UTC'), source_id: 3"
"                  COLUMN id: 152, column_name: time_interval, result_type: DateTime('UTC'), source_id: 6"
"      RIGHT TABLE EXPRESSION"
"        QUERY id: 8, alias: __table7, is_subquery: 1, is_cte: 1, cte_name: GYR_intervals"
"          PROJECTION COLUMNS"
"            time_interval DateTime('UTC')"
"            gyr_magnitude Float64"
"          PROJECTION"
"            LIST id: 153, nodes: 2"
"              FUNCTION id: 154, function_name: toStartOfInterval, function_type: ordinary, result_type: DateTime('UTC')"
"                ARGUMENTS"
"                  LIST id: 155, nodes: 2"
"                    COLUMN id: 156, column_name: ts, result_type: DateTime64(3, 'UTC'), source_id: 157"
"                    CONSTANT id: 158, constant_value: Int64_5, constant_value_type: IntervalMinute"
"                      EXPRESSION"
"                        FUNCTION id: 159, function_name: toIntervalMinute, function_type: ordinary, result_type: IntervalMinute"
"                          ARGUMENTS"
"                            LIST id: 160, nodes: 1"
"                              CONSTANT id: 161, constant_value: UInt64_5, constant_value_type: UInt8"
"              FUNCTION id: 162, function_name: avg, function_type: aggregate, result_type: Float64"
"                ARGUMENTS"
"                  LIST id: 163, nodes: 1"
"                    FUNCTION id: 164, function_name: plus, function_type: ordinary, result_type: Float64"
"                      ARGUMENTS"
"                        LIST id: 165, nodes: 2"
"                          FUNCTION id: 166, function_name: plus, function_type: ordinary, result_type: Float64"
"                            ARGUMENTS"
"                              LIST id: 167, nodes: 2"
"                                FUNCTION id: 168, function_name: multiply, function_type: ordinary, result_type: Float64"
"                                  ARGUMENTS"
"                                    LIST id: 169, nodes: 2"
"                                      COLUMN id: 170, column_name: x, result_type: Float64, source_id: 157"
"                                      COLUMN id: 171, column_name: x, result_type: Float64, source_id: 157"
"                                FUNCTION id: 172, function_name: multiply, function_type: ordinary, result_type: Float64"
"                                  ARGUMENTS"
"                                    LIST id: 173, nodes: 2"
"                                      COLUMN id: 174, column_name: y, result_type: Float64, source_id: 157"
"                                      COLUMN id: 175, column_name: y, result_type: Float64, source_id: 157"
"                          FUNCTION id: 176, function_name: multiply, function_type: ordinary, result_type: Float64"
"                            ARGUMENTS"
"                              LIST id: 177, nodes: 2"
"                                COLUMN id: 178, column_name: z, result_type: Float64, source_id: 157"
"                                COLUMN id: 179, column_name: z, result_type: Float64, source_id: 157"
"          JOIN TREE"
"            TABLE id: 157, alias: __table8, table_name: sensor.gyr"
"          GROUP BY"
"            LIST id: 180, nodes: 1"
"              FUNCTION id: 181, function_name: toStartOfInterval, function_type: ordinary, result_type: DateTime('UTC')"
"                ARGUMENTS"
"                  LIST id: 182, nodes: 2"
"                    COLUMN id: 183, column_name: ts, result_type: DateTime64(3, 'UTC'), source_id: 157"
"                    CONSTANT id: 184, constant_value: Int64_5, constant_value_type: IntervalMinute"
"                      EXPRESSION"
"                        FUNCTION id: 185, function_name: toIntervalMinute, function_type: ordinary, result_type: IntervalMinute"
"                          ARGUMENTS"
"                            LIST id: 186, nodes: 1"
"                              CONSTANT id: 187, constant_value: UInt64_5, constant_value_type: UInt8"
"      JOIN EXPRESSION"
"        FUNCTION id: 188, function_name: equals, function_type: ordinary, result_type: UInt8"
"          ARGUMENTS"
"            LIST id: 189, nodes: 2"
"              COLUMN id: 190, column_name: time_interval, result_type: DateTime('UTC'), source_id: 3"
"              COLUMN id: 191, column_name: time_interval, result_type: DateTime('UTC'), source_id: 8"
"  ORDER BY"
"    LIST id: 192, nodes: 1"
"      SORT id: 193, sort_direction: ASCENDING, with_fill: 0"
"        EXPRESSION"
"          COLUMN id: 194, column_name: time_interval, result_type: DateTime('UTC'), source_id: 3"
>

--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

--- Category CHBD Q4 execution tree ---

<bound method PyCapsule.data of "QUERY id: 0"
"  PROJECTION COLUMNS"
"    h.time_interval DateTime('UTC')"
"    interval_HR Float64"
"    acc_magnitude Float64"
"    gyr_magnitude Float64"
"    type_of_activity String"
"  PROJECTION"
"    LIST id: 1, nodes: 5"
"      COLUMN id: 2, column_name: time_interval, result_type: DateTime('UTC'), source_id: 3"
"      COLUMN id: 4, column_name: interval_HR, result_type: Float64, source_id: 3"
"      COLUMN id: 5, column_name: acc_magnitude, result_type: Float64, source_id: 6"
"      COLUMN id: 7, column_name: gyr_magnitude, result_type: Float64, source_id: 8"
"      FUNCTION id: 9, function_name: multiIf, function_type: ordinary, result_type: String"
"        ARGUMENTS"
"          LIST id: 10, nodes: 7"
"            FUNCTION id: 11, function_name: or, function_type: ordinary, result_type: UInt8"
"              ARGUMENTS"
"                LIST id: 12, nodes: 2"
"                  FUNCTION id: 13, function_name: less, function_type: ordinary, result_type: UInt8"
"                    ARGUMENTS"
"                      LIST id: 14, nodes: 2"
"                        COLUMN id: 15, column_name: interval_HR, result_type: Float64, source_id: 3"
"                        CONSTANT id: 16, constant_value: UInt64_80, constant_value_type: UInt8"
"                  FUNCTION id: 17, function_name: and, function_type: ordinary, result_type: UInt8"
"                    ARGUMENTS"
"                      LIST id: 18, nodes: 2"
"                        FUNCTION id: 19, function_name: less, function_type: ordinary, result_type: UInt8"
"                          ARGUMENTS"
"                            LIST id: 20, nodes: 2"
"                              COLUMN id: 21, column_name: acc_magnitude, result_type: Float64, source_id: 6"
"                              CONSTANT id: 22, constant_value: UInt64_2, constant_value_type: UInt8"
"                        FUNCTION id: 23, function_name: less, function_type: ordinary, result_type: UInt8"
"                          ARGUMENTS"
"                            LIST id: 24, nodes: 2"
"                              COLUMN id: 25, column_name: gyr_magnitude, result_type: Float64, source_id: 8"
"                              CONSTANT id: 26, constant_value: UInt64_2, constant_value_type: UInt8"
"            CONSTANT id: 27, constant_value: 'sitting', constant_value_type: String"
"            FUNCTION id: 28, function_name: or, function_type: ordinary, result_type: UInt8"
"              ARGUMENTS"
"                LIST id: 29, nodes: 2"
"                  FUNCTION id: 30, function_name: less, function_type: ordinary, result_type: UInt8"
"                    ARGUMENTS"
"                      LIST id: 31, nodes: 2"
"                        COLUMN id: 32, column_name: interval_HR, result_type: Float64, source_id: 3"
"                        CONSTANT id: 33, constant_value: UInt64_110, constant_value_type: UInt8"
"                  FUNCTION id: 34, function_name: and, function_type: ordinary, result_type: UInt8"
"                    ARGUMENTS"
"                      LIST id: 35, nodes: 2"
"                        FUNCTION id: 36, function_name: less, function_type: ordinary, result_type: UInt8"
"                          ARGUMENTS"
"                            LIST id: 37, nodes: 2"
"                              COLUMN id: 38, column_name: acc_magnitude, result_type: Float64, source_id: 6"
"                              CONSTANT id: 39, constant_value: UInt64_10, constant_value_type: UInt8"
"                        FUNCTION id: 40, function_name: less, function_type: ordinary, result_type: UInt8"
"                          ARGUMENTS"
"                            LIST id: 41, nodes: 2"
"                              COLUMN id: 42, column_name: gyr_magnitude, result_type: Float64, source_id: 8"
"                              CONSTANT id: 43, constant_value: UInt64_10, constant_value_type: UInt8"
"            CONSTANT id: 44, constant_value: 'light_activity', constant_value_type: String"
"            FUNCTION id: 45, function_name: or, function_type: ordinary, result_type: UInt8"
"              ARGUMENTS"
"                LIST id: 46, nodes: 2"
"                  FUNCTION id: 47, function_name: greaterOrEquals, function_type: ordinary, result_type: UInt8"
"                    ARGUMENTS"
"                      LIST id: 48, nodes: 2"
"                        COLUMN id: 49, column_name: interval_HR, result_type: Float64, source_id: 3"
"                        CONSTANT id: 50, constant_value: UInt64_110, constant_value_type: UInt8"
"                  FUNCTION id: 51, function_name: and, function_type: ordinary, result_type: UInt8"
"                    ARGUMENTS"
"                      LIST id: 52, nodes: 2"
"                        FUNCTION id: 53, function_name: less, function_type: ordinary, result_type: UInt8"
"                          ARGUMENTS"
"                            LIST id: 54, nodes: 2"
"                              COLUMN id: 55, column_name: acc_magnitude, result_type: Float64, source_id: 6"
"                              CONSTANT id: 56, constant_value: UInt64_100, constant_value_type: UInt8"
"                        FUNCTION id: 57, function_name: less, function_type: ordinary, result_type: UInt8"
"                          ARGUMENTS"
"                            LIST id: 58, nodes: 2"
"                              COLUMN id: 59, column_name: gyr_magnitude, result_type: Float64, source_id: 8"
"                              CONSTANT id: 60, constant_value: UInt64_100, constant_value_type: UInt8"
"            CONSTANT id: 61, constant_value: 'heavy_activity', constant_value_type: String"
"            CONSTANT id: 62, constant_value: 'misc', constant_value_type: String"
"  JOIN TREE"
"    JOIN id: 63, strictness: ALL, kind: INNER"
"      LEFT TABLE EXPRESSION"
"        JOIN id: 64, strictness: ALL, kind: INNER"
"          LEFT TABLE EXPRESSION"
"            QUERY id: 3, alias: __table1, is_subquery: 1, is_cte: 1, cte_name: HR_intervals"
"              PROJECTION COLUMNS"
"                time_interval DateTime('UTC')"
"                interval_HR Float64"
"              PROJECTION"
"                LIST id: 65, nodes: 2"
"                  COLUMN id: 66, column_name: time_interval, result_type: DateTime('UTC'), source_id: 67"
"                  FUNCTION id: 68, function_name: avg, function_type: aggregate, result_type: Float64"
"                    ARGUMENTS"
"                      LIST id: 69, nodes: 1"
"                        COLUMN id: 70, column_name: HR, result_type: Float64, source_id: 71"
"              JOIN TREE"
"                JOIN id: 72, strictness: ALL, kind: INNER"
"                  LEFT TABLE EXPRESSION"
"                    TABLE id: 71, alias: __table2, table_name: sensor.hrm"
"                  RIGHT TABLE EXPRESSION"
"                    QUERY id: 67, alias: __table3, is_subquery: 1, is_cte: 1, cte_name: LIT_intervals"
"                      PROJECTION COLUMNS"
"                        time_interval DateTime('UTC')"
"                      PROJECTION"
"                        LIST id: 73, nodes: 1"
"                          FUNCTION id: 74, function_name: toStartOfInterval, function_type: ordinary, result_type: DateTime('UTC')"
"                            ARGUMENTS"
"                              LIST id: 75, nodes: 2"
"                                COLUMN id: 76, column_name: ts, result_type: DateTime64(3, 'UTC'), source_id: 77"
"                                CONSTANT id: 78, constant_value: Int64_5, constant_value_type: IntervalMinute"
"                                  EXPRESSION"
"                                    FUNCTION id: 79, function_name: toIntervalMinute, function_type: ordinary, result_type: IntervalMinute"
"                                      ARGUMENTS"
"                                        LIST id: 80, nodes: 1"
"                                          CONSTANT id: 81, constant_value: UInt64_5, constant_value_type: UInt8"
"                      JOIN TREE"
"                        TABLE id: 77, alias: __table4, table_name: sensor.lit"
"                      GROUP BY"
"                        LIST id: 82, nodes: 1"
"                          FUNCTION id: 83, function_name: toStartOfInterval, function_type: ordinary, result_type: DateTime('UTC')"
"                            ARGUMENTS"
"                              LIST id: 84, nodes: 2"
"                                COLUMN id: 85, column_name: ts, result_type: DateTime64(3, 'UTC'), source_id: 77"
"                                CONSTANT id: 86, constant_value: Int64_5, constant_value_type: IntervalMinute"
"                                  EXPRESSION"
"                                    FUNCTION id: 87, function_name: toIntervalMinute, function_type: ordinary, result_type: IntervalMinute"
"                                      ARGUMENTS"
"                                        LIST id: 88, nodes: 1"
"                                          CONSTANT id: 89, constant_value: UInt64_5, constant_value_type: UInt8"
"                      HAVING"
"                        FUNCTION id: 90, function_name: greater, function_type: ordinary, result_type: UInt8"
"                          ARGUMENTS"
"                            LIST id: 91, nodes: 2"
"                              FUNCTION id: 92, function_name: avg, function_type: aggregate, result_type: Float64"
"                                ARGUMENTS"
"                                  LIST id: 93, nodes: 1"
"                                    COLUMN id: 94, column_name: ambient_light_intensity, result_type: Float64, source_id: 77"
"                              CONSTANT id: 95, constant_value: UInt64_100, constant_value_type: UInt8"
"                  JOIN EXPRESSION"
"                    FUNCTION id: 96, function_name: equals, function_type: ordinary, result_type: UInt8"
"                      ARGUMENTS"
"                        LIST id: 97, nodes: 2"
"                          FUNCTION id: 98, function_name: toStartOfInterval, function_type: ordinary, result_type: DateTime('UTC')"
"                            ARGUMENTS"
"                              LIST id: 99, nodes: 2"
"                                COLUMN id: 100, column_name: ts, result_type: DateTime64(3, 'UTC'), source_id: 71"
"                                CONSTANT id: 101, constant_value: Int64_5, constant_value_type: IntervalMinute"
"                                  EXPRESSION"
"                                    FUNCTION id: 102, function_name: toIntervalMinute, function_type: ordinary, result_type: IntervalMinute"
"                                      ARGUMENTS"
"                                        LIST id: 103, nodes: 1"
"                                          CONSTANT id: 104, constant_value: UInt64_5, constant_value_type: UInt8"
"                          COLUMN id: 105, column_name: time_interval, result_type: DateTime('UTC'), source_id: 67"
"              GROUP BY"
"                LIST id: 106, nodes: 1"
"                  COLUMN id: 107, column_name: time_interval, result_type: DateTime('UTC'), source_id: 67"
"          RIGHT TABLE EXPRESSION"
"            QUERY id: 6, alias: __table5, is_subquery: 1, is_cte: 1, cte_name: ACC_intervals"
"              PROJECTION COLUMNS"
"                time_interval DateTime('UTC')"
"                acc_magnitude Float64"
"              PROJECTION"
"                LIST id: 108, nodes: 2"
"                  COLUMN id: 109, column_name: time_interval, result_type: DateTime('UTC'), source_id: 110"
"                  FUNCTION id: 111, function_name: avg, function_type: aggregate, result_type: Float64"
"                    ARGUMENTS"
"                      LIST id: 112, nodes: 1"
"                        FUNCTION id: 113, function_name: plus, function_type: ordinary, result_type: Float64"
"                          ARGUMENTS"
"                            LIST id: 114, nodes: 2"
"                              FUNCTION id: 115, function_name: plus, function_type: ordinary, result_type: Float64"
"                                ARGUMENTS"
"                                  LIST id: 116, nodes: 2"
"                                    FUNCTION id: 117, function_name: multiply, function_type: ordinary, result_type: Float64"
"                                      ARGUMENTS"
"                                        LIST id: 118, nodes: 2"
"                                          COLUMN id: 119, column_name: x, result_type: Float64, source_id: 120"
"                                          COLUMN id: 121, column_name: x, result_type: Float64, source_id: 120"
"                                    FUNCTION id: 122, function_name: multiply, function_type: ordinary, result_type: Float64"
"                                      ARGUMENTS"
"                                        LIST id: 123, nodes: 2"
"                                          COLUMN id: 124, column_name: y, result_type: Float64, source_id: 120"
"                                          COLUMN id: 125, column_name: y, result_type: Float64, source_id: 120"
"                              FUNCTION id: 126, function_name: multiply, function_type: ordinary, result_type: Float64"
"                                ARGUMENTS"
"                                  LIST id: 127, nodes: 2"
"                                    COLUMN id: 128, column_name: z, result_type: Float64, source_id: 120"
"                                    COLUMN id: 129, column_name: z, result_type: Float64, source_id: 120"
"              JOIN TREE"
"                JOIN id: 130, strictness: ALL, kind: INNER"
"                  LEFT TABLE EXPRESSION"
"                    TABLE id: 120, alias: __table6, table_name: sensor.acc"
"                  RIGHT TABLE EXPRESSION"
"                    QUERY id: 110, alias: __table7, is_subquery: 1, is_cte: 1, cte_name: LIT_intervals"
"                      PROJECTION COLUMNS"
"                        time_interval DateTime('UTC')"
"                      PROJECTION"
"                        LIST id: 131, nodes: 1"
"                          FUNCTION id: 132, function_name: toStartOfInterval, function_type: ordinary, result_type: DateTime('UTC')"
"                            ARGUMENTS"
"                              LIST id: 133, nodes: 2"
"                                COLUMN id: 134, column_name: ts, result_type: DateTime64(3, 'UTC'), source_id: 135"
"                                CONSTANT id: 136, constant_value: Int64_5, constant_value_type: IntervalMinute"
"                                  EXPRESSION"
"                                    FUNCTION id: 137, function_name: toIntervalMinute, function_type: ordinary, result_type: IntervalMinute"
"                                      ARGUMENTS"
"                                        LIST id: 138, nodes: 1"
"                                          CONSTANT id: 139, constant_value: UInt64_5, constant_value_type: UInt8"
"                      JOIN TREE"
"                        TABLE id: 135, alias: __table8, table_name: sensor.lit"
"                      GROUP BY"
"                        LIST id: 140, nodes: 1"
"                          FUNCTION id: 141, function_name: toStartOfInterval, function_type: ordinary, result_type: DateTime('UTC')"
"                            ARGUMENTS"
"                              LIST id: 142, nodes: 2"
"                                COLUMN id: 143, column_name: ts, result_type: DateTime64(3, 'UTC'), source_id: 135"
"                                CONSTANT id: 144, constant_value: Int64_5, constant_value_type: IntervalMinute"
"                                  EXPRESSION"
"                                    FUNCTION id: 145, function_name: toIntervalMinute, function_type: ordinary, result_type: IntervalMinute"
"                                      ARGUMENTS"
"                                        LIST id: 146, nodes: 1"
"                                          CONSTANT id: 147, constant_value: UInt64_5, constant_value_type: UInt8"
"                      HAVING"
"                        FUNCTION id: 148, function_name: greater, function_type: ordinary, result_type: UInt8"
"                          ARGUMENTS"
"                            LIST id: 149, nodes: 2"
"                              FUNCTION id: 150, function_name: avg, function_type: aggregate, result_type: Float64"
"                                ARGUMENTS"
"                                  LIST id: 151, nodes: 1"
"                                    COLUMN id: 152, column_name: ambient_light_intensity, result_type: Float64, source_id: 135"
"                              CONSTANT id: 153, constant_value: UInt64_100, constant_value_type: UInt8"
"                  JOIN EXPRESSION"
"                    FUNCTION id: 154, function_name: equals, function_type: ordinary, result_type: UInt8"
"                      ARGUMENTS"
"                        LIST id: 155, nodes: 2"
"                          FUNCTION id: 156, function_name: toStartOfInterval, function_type: ordinary, result_type: DateTime('UTC')"
"                            ARGUMENTS"
"                              LIST id: 157, nodes: 2"
"                                COLUMN id: 158, column_name: ts, result_type: DateTime64(3, 'UTC'), source_id: 120"
"                                CONSTANT id: 159, constant_value: Int64_5, constant_value_type: IntervalMinute"
"                                  EXPRESSION"
"                                    FUNCTION id: 160, function_name: toIntervalMinute, function_type: ordinary, result_type: IntervalMinute"
"                                      ARGUMENTS"
"                                        LIST id: 161, nodes: 1"
"                                          CONSTANT id: 162, constant_value: UInt64_5, constant_value_type: UInt8"
"                          COLUMN id: 163, column_name: time_interval, result_type: DateTime('UTC'), source_id: 110"
"              GROUP BY"
"                LIST id: 164, nodes: 1"
"                  COLUMN id: 165, column_name: time_interval, result_type: DateTime('UTC'), source_id: 110"
"          JOIN EXPRESSION"
"            FUNCTION id: 166, function_name: equals, function_type: ordinary, result_type: UInt8"
"              ARGUMENTS"
"                LIST id: 167, nodes: 2"
"                  COLUMN id: 168, column_name: time_interval, result_type: DateTime('UTC'), source_id: 3"
"                  COLUMN id: 169, column_name: time_interval, result_type: DateTime('UTC'), source_id: 6"
"      RIGHT TABLE EXPRESSION"
"        QUERY id: 8, alias: __table9, is_subquery: 1, is_cte: 1, cte_name: GYR_intervals"
"          PROJECTION COLUMNS"
"            time_interval DateTime('UTC')"
"            gyr_magnitude Float64"
"          PROJECTION"
"            LIST id: 170, nodes: 2"
"              COLUMN id: 171, column_name: time_interval, result_type: DateTime('UTC'), source_id: 172"
"              FUNCTION id: 173, function_name: avg, function_type: aggregate, result_type: Float64"
"                ARGUMENTS"
"                  LIST id: 174, nodes: 1"
"                    FUNCTION id: 175, function_name: plus, function_type: ordinary, result_type: Float64"
"                      ARGUMENTS"
"                        LIST id: 176, nodes: 2"
"                          FUNCTION id: 177, function_name: plus, function_type: ordinary, result_type: Float64"
"                            ARGUMENTS"
"                              LIST id: 178, nodes: 2"
"                                FUNCTION id: 179, function_name: multiply, function_type: ordinary, result_type: Float64"
"                                  ARGUMENTS"
"                                    LIST id: 180, nodes: 2"
"                                      COLUMN id: 181, column_name: x, result_type: Float64, source_id: 182"
"                                      COLUMN id: 183, column_name: x, result_type: Float64, source_id: 182"
"                                FUNCTION id: 184, function_name: multiply, function_type: ordinary, result_type: Float64"
"                                  ARGUMENTS"
"                                    LIST id: 185, nodes: 2"
"                                      COLUMN id: 186, column_name: y, result_type: Float64, source_id: 182"
"                                      COLUMN id: 187, column_name: y, result_type: Float64, source_id: 182"
"                          FUNCTION id: 188, function_name: multiply, function_type: ordinary, result_type: Float64"
"                            ARGUMENTS"
"                              LIST id: 189, nodes: 2"
"                                COLUMN id: 190, column_name: z, result_type: Float64, source_id: 182"
"                                COLUMN id: 191, column_name: z, result_type: Float64, source_id: 182"
"          JOIN TREE"
"            JOIN id: 192, strictness: ALL, kind: INNER"
"              LEFT TABLE EXPRESSION"
"                TABLE id: 182, alias: __table10, table_name: sensor.gyr"
"              RIGHT TABLE EXPRESSION"
"                QUERY id: 172, alias: __table11, is_subquery: 1, is_cte: 1, cte_name: LIT_intervals"
"                  PROJECTION COLUMNS"
"                    time_interval DateTime('UTC')"
"                  PROJECTION"
"                    LIST id: 193, nodes: 1"
"                      FUNCTION id: 194, function_name: toStartOfInterval, function_type: ordinary, result_type: DateTime('UTC')"
"                        ARGUMENTS"
"                          LIST id: 195, nodes: 2"
"                            COLUMN id: 196, column_name: ts, result_type: DateTime64(3, 'UTC'), source_id: 197"
"                            CONSTANT id: 198, constant_value: Int64_5, constant_value_type: IntervalMinute"
"                              EXPRESSION"
"                                FUNCTION id: 199, function_name: toIntervalMinute, function_type: ordinary, result_type: IntervalMinute"
"                                  ARGUMENTS"
"                                    LIST id: 200, nodes: 1"
"                                      CONSTANT id: 201, constant_value: UInt64_5, constant_value_type: UInt8"
"                  JOIN TREE"
"                    TABLE id: 197, alias: __table12, table_name: sensor.lit"
"                  GROUP BY"
"                    LIST id: 202, nodes: 1"
"                      FUNCTION id: 203, function_name: toStartOfInterval, function_type: ordinary, result_type: DateTime('UTC')"
"                        ARGUMENTS"
"                          LIST id: 204, nodes: 2"
"                            COLUMN id: 205, column_name: ts, result_type: DateTime64(3, 'UTC'), source_id: 197"
"                            CONSTANT id: 206, constant_value: Int64_5, constant_value_type: IntervalMinute"
"                              EXPRESSION"
"                                FUNCTION id: 207, function_name: toIntervalMinute, function_type: ordinary, result_type: IntervalMinute"
"                                  ARGUMENTS"
"                                    LIST id: 208, nodes: 1"
"                                      CONSTANT id: 209, constant_value: UInt64_5, constant_value_type: UInt8"
"                  HAVING"
"                    FUNCTION id: 210, function_name: greater, function_type: ordinary, result_type: UInt8"
"                      ARGUMENTS"
"                        LIST id: 211, nodes: 2"
"                          FUNCTION id: 212, function_name: avg, function_type: aggregate, result_type: Float64"
"                            ARGUMENTS"
"                              LIST id: 213, nodes: 1"
"                                COLUMN id: 214, column_name: ambient_light_intensity, result_type: Float64, source_id: 197"
"                          CONSTANT id: 215, constant_value: UInt64_100, constant_value_type: UInt8"
"              JOIN EXPRESSION"
"                FUNCTION id: 216, function_name: equals, function_type: ordinary, result_type: UInt8"
"                  ARGUMENTS"
"                    LIST id: 217, nodes: 2"
"                      FUNCTION id: 218, function_name: toStartOfInterval, function_type: ordinary, result_type: DateTime('UTC')"
"                        ARGUMENTS"
"                          LIST id: 219, nodes: 2"
"                            COLUMN id: 220, column_name: ts, result_type: DateTime64(3, 'UTC'), source_id: 182"
"                            CONSTANT id: 221, constant_value: Int64_5, constant_value_type: IntervalMinute"
"                              EXPRESSION"
"                                FUNCTION id: 222, function_name: toIntervalMinute, function_type: ordinary, result_type: IntervalMinute"
"                                  ARGUMENTS"
"                                    LIST id: 223, nodes: 1"
"                                      CONSTANT id: 224, constant_value: UInt64_5, constant_value_type: UInt8"
"                      COLUMN id: 225, column_name: time_interval, result_type: DateTime('UTC'), source_id: 172"
"          GROUP BY"
"            LIST id: 226, nodes: 1"
"              COLUMN id: 227, column_name: time_interval, result_type: DateTime('UTC'), source_id: 172"
"      JOIN EXPRESSION"
"        FUNCTION id: 228, function_name: equals, function_type: ordinary, result_type: UInt8"
"          ARGUMENTS"
"            LIST id: 229, nodes: 2"
"              COLUMN id: 230, column_name: time_interval, result_type: DateTime('UTC'), source_id: 3"
"              COLUMN id: 231, column_name: time_interval, result_type: DateTime('UTC'), source_id: 8"
"  ORDER BY"
"    LIST id: 232, nodes: 1"
"      SORT id: 233, sort_direction: ASCENDING, with_fill: 0"
"        EXPRESSION"
"          COLUMN id: 234, column_name: time_interval, result_type: DateTime('UTC'), source_id: 3"
>

--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

